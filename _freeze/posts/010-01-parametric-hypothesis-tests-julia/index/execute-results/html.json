{
  "hash": "07c598048f3b36f2f950d46ab2d0aace",
  "result": {
    "markdown": "---\ntitle: Parametric hypothesis tests with examples in Julia\ndescription: A tutorial on parametric hypothesis tests with examples in Julia.\nauthor:\n  - name: Dhruva Sambrani\n    orcid: 0000-0001-6254-4757\ndate: '2022-11-17'\ncategories:\n  - How To\n  - Parametric Tests\n  - T-test\n  - Z-test\n  - F-test\n  - Julia\nformat:\n  html:\n    code-fold: false\n    code-tools:\n      source: false\n      toggle: true\ncitation: true\ngoogle-scholar: true\n---\n\n::: {.callout-note collapse=\"true\"}\n### Update history\n\n2022-11-17 First draft\n:::\n\n# Introduction\n\nThis article is an extension of [Rohit Farmer. 2022. \"Parametric Hypothesis Tests with Examples in R.\" November 10, 2022](https://www.dataalltheway.com/posts/010-parametric-hypothesis-tests-r). Please check out the parent article for the theoretical background.\n\n-   Z-test (@sec-z-test)\n-   T-test (@sec-t-test)\n-   F-test (@sec-f-test)\n\n## Import packages\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nimport Pkg\nPkg.activate(\".\")\nusing CSV\nusing DataFrames\nusing Statistics\nusing HypothesisTests\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n  Activating project at `~/sandbox/dataalltheway/posts/010-01-parametric-hypothesis-tests-julia`\n```\n:::\n:::\n\n\n# Getting the data\n\nSome cleaning is necessary since the data is not of the correct types.\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nbegin\n\tdata = CSV.read(download(\"https://raw.githubusercontent.com/opencasestudies/ocs-bp-rural-and-urban-obesity/master/data/wrangled/BMI_long.csv\"), DataFrame) # download and load\n\tallowmissing!(data, :BMI) # Allow BMI col to have missing values\n\treplace!(data.BMI, \"NA\" => missing) # Convert \"NA\" to missing\n\tdata[!, :BMI] .= passmissing(parse).(Float64, (data[!, :BMI])) # Typecast into Float64?\nend;\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nfirst(data, 20)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div><div style = \"float: left;\"><span>20Ã—5 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">Country</th><th style = \"text-align: left;\">Sex</th><th style = \"text-align: left;\">Region</th><th style = \"text-align: left;\">Year</th><th style = \"text-align: left;\">BMI</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String7\" style = \"text-align: left;\">String7</th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">National</td><td style = \"text-align: right;\">1985</td><td style = \"text-align: right;\">20.2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">Rural</td><td style = \"text-align: right;\">1985</td><td style = \"text-align: right;\">19.7</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">Urban</td><td style = \"text-align: right;\">1985</td><td style = \"text-align: right;\">22.4</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">National</td><td style = \"text-align: right;\">2017</td><td style = \"text-align: right;\">22.8</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">Rural</td><td style = \"text-align: right;\">2017</td><td style = \"text-align: right;\">22.5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">Urban</td><td style = \"text-align: right;\">2017</td><td style = \"text-align: right;\">23.6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Women</td><td style = \"text-align: left;\">National</td><td style = \"text-align: right;\">1985</td><td style = \"text-align: right;\">20.6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Women</td><td style = \"text-align: left;\">Rural</td><td style = \"text-align: right;\">1985</td><td style = \"text-align: right;\">20.1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Women</td><td style = \"text-align: left;\">Urban</td><td style = \"text-align: right;\">1985</td><td style = \"text-align: right;\">23.2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Women</td><td style = \"text-align: left;\">National</td><td style = \"text-align: right;\">2017</td><td style = \"text-align: right;\">24.4</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Women</td><td style = \"text-align: left;\">Rural</td><td style = \"text-align: right;\">2017</td><td style = \"text-align: right;\">23.6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Afghanistan</td><td style = \"text-align: left;\">Women</td><td style = \"text-align: left;\">Urban</td><td style = \"text-align: right;\">2017</td><td style = \"text-align: right;\">26.3</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Albania</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">National</td><td style = \"text-align: right;\">1985</td><td style = \"text-align: right;\">25.2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">14</td><td style = \"text-align: left;\">Albania</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">Rural</td><td style = \"text-align: right;\">1985</td><td style = \"text-align: right;\">25.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">15</td><td style = \"text-align: left;\">Albania</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">Urban</td><td style = \"text-align: right;\">1985</td><td style = \"text-align: right;\">25.4</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">16</td><td style = \"text-align: left;\">Albania</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">National</td><td style = \"text-align: right;\">2017</td><td style = \"text-align: right;\">27.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">17</td><td style = \"text-align: left;\">Albania</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">Rural</td><td style = \"text-align: right;\">2017</td><td style = \"text-align: right;\">26.9</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">18</td><td style = \"text-align: left;\">Albania</td><td style = \"text-align: left;\">Men</td><td style = \"text-align: left;\">Urban</td><td style = \"text-align: right;\">2017</td><td style = \"text-align: right;\">27.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">19</td><td style = \"text-align: left;\">Albania</td><td style = \"text-align: left;\">Women</td><td style = \"text-align: left;\">National</td><td style = \"text-align: right;\">1985</td><td style = \"text-align: right;\">26.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">20</td><td style = \"text-align: left;\">Albania</td><td style = \"text-align: left;\">Women</td><td style = \"text-align: left;\">Rural</td><td style = \"text-align: right;\">1985</td><td style = \"text-align: right;\">26.1</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n# Z-test {#sec-z-test}\n\n## Two sample unpaired z-test\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\nuneqvarztest = let\n\t# Fetch a random sample of BMI data for women in the year 1985 and 2017\n\tx1 = filter([:Sex, :Year] => (s, y) -> s==\"Women\" && y==1985 , data) |>\n\t\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tx2 = filter([:Sex, :Year] => (s, y) -> s==\"Women\" && y==2017 , data) |>\n\t\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tUnequalVarianceZTest(x1, x2)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\nTwo sample z-test (unequal variance)\n------------------------------------\nPopulation details:\n    parameter of interest:   Mean difference\n    value under h_0:         0\n    point estimate:          -2.38367\n    95% confidence interval: (-2.827, -1.94)\n\nTest summary:\n    outcome with 95% confidence: reject h_0\n    two-sided p-value:           <1e-25\n\nDetails:\n    number of observations:   [300,300]\n    z-statistic:              -10.528264586426888\n    population standard error: 0.2264064174203698\n```\n:::\n:::\n\n\n## Two sample paired z-test\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\neqvarztest = let\n\t# Fetch a random sample of BMI data for women in the year 1985 and 2017\n\tx1 = filter([:Sex, :Year] => (s, y) -> s==\"Women\" && y==1985 , data) |>\n\t\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tx2 = filter([:Sex, :Year] => (s, y) -> s==\"Women\" && y==2017 , data) |>\n\t\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tEqualVarianceZTest(x1, x2)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\nTwo sample z-test (equal variance)\n----------------------------------\nPopulation details:\n    parameter of interest:   Mean difference\n    value under h_0:         0\n    point estimate:          -2.58\n    95% confidence interval: (-3.019, -2.141)\n\nTest summary:\n    outcome with 95% confidence: reject h_0\n    two-sided p-value:           <1e-29\n\nDetails:\n    number of observations:   [300,300]\n    z-statistic:              -11.517668117086219\n    population standard error: 0.22400367624524847\n```\n:::\n:::\n\n\n# T-test {#sec-t-test}\n\n## One sample t-test\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\nonesamplettest = let \n\tx1 = filter(\n\t\t[:Sex, :Region, :Year] => \n\t\t\t(s, r, y) -> s==\"Men\" && r==\"Rural\" && y == 2017,\n\t\tdata\n\t) |>\n\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tOneSampleTTest(x1, 24.5)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\nOne sample t-test\n-----------------\nPopulation details:\n    parameter of interest:   Mean\n    value under h_0:         24.5\n    point estimate:          25.2643\n    95% confidence interval: (24.98, 25.55)\n\nTest summary:\n    outcome with 95% confidence: reject h_0\n    two-sided p-value:           <1e-06\n\nDetails:\n    number of observations:   300\n    t-statistic:              5.207880773866485\n    degrees of freedom:       299\n    empirical standard error: 0.14676475259741198\n```\n:::\n:::\n\n\n## Two sample unpaired (independent) t-test\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\nunpairedtwosamplettest = let \n    x1 = filter([:Sex, :Region, :Year] => \n            (s, r, y) -> s==\"Women\" && r==\"Rural\" && y == 1985,\n        data) |>\n        x -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n    x2 = filter([:Sex, :Region, :Year] => \n            (s, r, y) -> s==\"Women\" && r==\"Urban\" && y == 1985,\n        data) |>\n        x -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n    x -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n    UnequalVarianceTTest(x1, x2)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\nTwo sample t-test (unequal variance)\n------------------------------------\nPopulation details:\n    parameter of interest:   Mean difference\n    value under h_0:         0\n    point estimate:          -1.01\n    95% confidence interval: (-1.425, -0.5954)\n\nTest summary:\n    outcome with 95% confidence: reject h_0\n    two-sided p-value:           <1e-05\n\nDetails:\n    number of observations:   [300,300]\n    t-statistic:              -4.785046904266988\n    degrees of freedom:       575.3572920894766\n    empirical standard error: 0.2110742110175243\n```\n:::\n:::\n\n\n::: callout-warning\n## Welch's Test\n\nThis test uses the Welch correction, and there is no way to turn it off in `HypothesisTests.jl`.\n:::\n\n### Only considering right tailed (one-tailed)\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\nunpairedtwosamplettest = let \n\tx1 = filter([:Sex, :Region, :Year] => \n\t\t\t(s, r, y) -> s==\"Women\" && r==\"Rural\" && y == 1985,\n\t\tdata) |>\n\t\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tx2 = filter([:Sex, :Region, :Year] => \n\t\t\t(s, r, y) -> s==\"Women\" && r==\"Urban\" && y == 1985,\n\t\tdata) |>\n\t\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tUnequalVarianceTTest(x1, x2)\nend\npvalue(unpairedtwosamplettest, tail=:right)\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n0.9999999999833393\n```\n:::\n:::\n\n\n## Two sample paired (dependent) t-test\n\n::: {.cell execution_count=9}\n``` {.julia .cell-code}\npairedtwosamplettest = let \n\tx1 = filter([:Sex, :Region, :Year] => \n\t\t\t(s, r, y) -> s==\"Women\" && r==\"Rural\" && y == 1985,\n\t\tdata) |>\n\t\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tx2 = filter([:Sex, :Region, :Year] => \n\t\t\t(s, r, y) -> s==\"Women\" && r==\"Urban\" && y == 1985,\n\t\tdata) |>\n\t\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tEqualVarianceTTest(x1, x2)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\nTwo sample t-test (equal variance)\n----------------------------------\nPopulation details:\n    parameter of interest:   Mean difference\n    value under h_0:         0\n    point estimate:          -1.16233\n    95% confidence interval: (-1.599, -0.726)\n\nTest summary:\n    outcome with 95% confidence: reject h_0\n    two-sided p-value:           <1e-06\n\nDetails:\n    number of observations:   [300,300]\n    t-statistic:              -5.231462889930723\n    degrees of freedom:       598\n    empirical standard error: 0.22218132055768464\n```\n:::\n:::\n\n\n# F-test {#sec-f-test}\n\n::: {.cell execution_count=10}\n``` {.julia .cell-code}\nFtest = let \n\tx1 = filter([:Sex, :Region, :Year] => \n\t\t\t(s, r, y) -> s==\"Women\" && r==\"Rural\" && y == 1985,\n\t\tdata) |>\n\t\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tx2 = filter([:Sex, :Region, :Year] => \n\t\t\t(s, r, y) -> s==\"Women\" && r==\"Urban\" && y == 1985,\n\t\tdata) |>\n\t\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tx -> x[!, :BMI] |> skipmissing |> collect |> x->rand(x, 300)\n\tVarianceFTest(x1, x2)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\nVariance F-test\n---------------\nPopulation details:\n    parameter of interest:   variance ratio\n    value under h_0:         1.0\n    point estimate:          1.27001\n\nTest summary:\n    outcome with 95% confidence: reject h_0\n    two-sided p-value:           0.0392\n\nDetails:\n    number of observations: [300, 300]\n    F statistic:            1.2700129709253052\n    degrees of freedom:     [299, 299]\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}