{
  "hash": "e84d2f4dc29a476a4bfcbf25e81f68e2",
  "result": {
    "markdown": "---\ntitle: Linear regression for inferential and predictive modeling with examples in Julia\ndescription: A tutorial on building and interpreting linear regression models for inferential and predictive modeling with examples in R.\nauthor:\n  - name: Dhruva Sambrani\n    orcid: 0000-0001-6254-4757\ndate: '2023-08-15'\ncategories:\n  - Linear Regression\n  - Inferential Modeling\n  - Predictive Modeling\n  - Julia\nformat:\n  html:\n    code-fold: false\ncitation: true\ngoogle-scholar: true\ndraft: true\nexecute:\n  eval: true\n---\n\n::: {.callout-note collapse=\"true\"}\n### Update history\n\n2023-08-15 First draft\n:::\n\n# Introduction\n\nThis article is an extension of [Farmer, Rohit. 2023. \"Linear Regression for Inferential and Predictive Modeling.\" July 13, 2023.](https://www.dataalltheway.com/posts/013-linear-regression) . Please check out the parent article for the theoretical background.\n\n## Import Packages\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nimport Pkg\nPkg.activate(\".\")\nusing IJulia\nusing PalmerPenguins \nusing DataFrames\nusing Statistics\nusing Plots\nusing Pipe\nusing LsqFit\nusing GLM\nusing StatsPlots\nusing Statistics\nusing StatsBase\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n  Activating new project at `~/sandbox/dataalltheway/posts/013-01-linear-regression-julia`\n```\n:::\n:::\n\n\n# Getting the data\n\nLet us also drop the rows which have any missing data.\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nENV[\"DATADEPS_ALWAYS_ACCEPT\"] = \"true\" # needed for downloading data without confirmation\ndata = dropmissing(DataFrame(PalmerPenguins.load()))\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div><div style = \"float: left;\"><span>333Ã—7 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">308 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">species</th><th style = \"text-align: left;\">island</th><th style = \"text-align: left;\">bill_length_mm</th><th style = \"text-align: left;\">bill_depth_mm</th><th style = \"text-align: left;\">flipper_length_mm</th><th style = \"text-align: left;\">body_mass_g</th><th style = \"text-align: left;\">sex</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"InlineStrings.String15\" style = \"text-align: left;\">String15</th><th title = \"InlineStrings.String15\" style = \"text-align: left;\">String15</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"InlineStrings.String7\" style = \"text-align: left;\">String7</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.1</td><td style = \"text-align: right;\">18.7</td><td style = \"text-align: right;\">181</td><td style = \"text-align: right;\">3750</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.5</td><td style = \"text-align: right;\">17.4</td><td style = \"text-align: right;\">186</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">40.3</td><td style = \"text-align: right;\">18.0</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">3250</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">36.7</td><td style = \"text-align: right;\">19.3</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">3450</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.3</td><td style = \"text-align: right;\">20.6</td><td style = \"text-align: right;\">190</td><td style = \"text-align: right;\">3650</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">38.9</td><td style = \"text-align: right;\">17.8</td><td style = \"text-align: right;\">181</td><td style = \"text-align: right;\">3625</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.2</td><td style = \"text-align: right;\">19.6</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">4675</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">41.1</td><td style = \"text-align: right;\">17.6</td><td style = \"text-align: right;\">182</td><td style = \"text-align: right;\">3200</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">38.6</td><td style = \"text-align: right;\">21.2</td><td style = \"text-align: right;\">191</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">34.6</td><td style = \"text-align: right;\">21.1</td><td style = \"text-align: right;\">198</td><td style = \"text-align: right;\">4400</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">36.6</td><td style = \"text-align: right;\">17.8</td><td style = \"text-align: right;\">185</td><td style = \"text-align: right;\">3700</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">38.7</td><td style = \"text-align: right;\">19.0</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">3450</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">42.5</td><td style = \"text-align: right;\">20.7</td><td style = \"text-align: right;\">197</td><td style = \"text-align: right;\">4500</td><td style = \"text-align: left;\">male</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">322</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">45.2</td><td style = \"text-align: right;\">16.6</td><td style = \"text-align: right;\">191</td><td style = \"text-align: right;\">3250</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">323</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">49.3</td><td style = \"text-align: right;\">19.9</td><td style = \"text-align: right;\">203</td><td style = \"text-align: right;\">4050</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">324</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">50.2</td><td style = \"text-align: right;\">18.8</td><td style = \"text-align: right;\">202</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">325</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">45.6</td><td style = \"text-align: right;\">19.4</td><td style = \"text-align: right;\">194</td><td style = \"text-align: right;\">3525</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">326</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">51.9</td><td style = \"text-align: right;\">19.5</td><td style = \"text-align: right;\">206</td><td style = \"text-align: right;\">3950</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">327</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">46.8</td><td style = \"text-align: right;\">16.5</td><td style = \"text-align: right;\">189</td><td style = \"text-align: right;\">3650</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">328</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">45.7</td><td style = \"text-align: right;\">17.0</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">3650</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">329</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">55.8</td><td style = \"text-align: right;\">19.8</td><td style = \"text-align: right;\">207</td><td style = \"text-align: right;\">4000</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">330</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">43.5</td><td style = \"text-align: right;\">18.1</td><td style = \"text-align: right;\">202</td><td style = \"text-align: right;\">3400</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">331</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">49.6</td><td style = \"text-align: right;\">18.2</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">3775</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">332</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">50.8</td><td style = \"text-align: right;\">19.0</td><td style = \"text-align: right;\">210</td><td style = \"text-align: right;\">4100</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">333</td><td style = \"text-align: left;\">Chinstrap</td><td style = \"text-align: left;\">Dream</td><td style = \"text-align: right;\">50.2</td><td style = \"text-align: right;\">18.7</td><td style = \"text-align: right;\">198</td><td style = \"text-align: right;\">3775</td><td style = \"text-align: left;\">female</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nThe data already does not include the `year` data, and so we don't need to change anything.\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nfirst(data, 20)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div><div style = \"float: left;\"><span>20Ã—7 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">species</th><th style = \"text-align: left;\">island</th><th style = \"text-align: left;\">bill_length_mm</th><th style = \"text-align: left;\">bill_depth_mm</th><th style = \"text-align: left;\">flipper_length_mm</th><th style = \"text-align: left;\">body_mass_g</th><th style = \"text-align: left;\">sex</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"InlineStrings.String15\" style = \"text-align: left;\">String15</th><th title = \"InlineStrings.String15\" style = \"text-align: left;\">String15</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"InlineStrings.String7\" style = \"text-align: left;\">String7</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.1</td><td style = \"text-align: right;\">18.7</td><td style = \"text-align: right;\">181</td><td style = \"text-align: right;\">3750</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.5</td><td style = \"text-align: right;\">17.4</td><td style = \"text-align: right;\">186</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">40.3</td><td style = \"text-align: right;\">18.0</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">3250</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">36.7</td><td style = \"text-align: right;\">19.3</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">3450</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.3</td><td style = \"text-align: right;\">20.6</td><td style = \"text-align: right;\">190</td><td style = \"text-align: right;\">3650</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">38.9</td><td style = \"text-align: right;\">17.8</td><td style = \"text-align: right;\">181</td><td style = \"text-align: right;\">3625</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">39.2</td><td style = \"text-align: right;\">19.6</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">4675</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">41.1</td><td style = \"text-align: right;\">17.6</td><td style = \"text-align: right;\">182</td><td style = \"text-align: right;\">3200</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">38.6</td><td style = \"text-align: right;\">21.2</td><td style = \"text-align: right;\">191</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">34.6</td><td style = \"text-align: right;\">21.1</td><td style = \"text-align: right;\">198</td><td style = \"text-align: right;\">4400</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">36.6</td><td style = \"text-align: right;\">17.8</td><td style = \"text-align: right;\">185</td><td style = \"text-align: right;\">3700</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">38.7</td><td style = \"text-align: right;\">19.0</td><td style = \"text-align: right;\">195</td><td style = \"text-align: right;\">3450</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">42.5</td><td style = \"text-align: right;\">20.7</td><td style = \"text-align: right;\">197</td><td style = \"text-align: right;\">4500</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">14</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">34.4</td><td style = \"text-align: right;\">18.4</td><td style = \"text-align: right;\">184</td><td style = \"text-align: right;\">3325</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">15</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Torgersen</td><td style = \"text-align: right;\">46.0</td><td style = \"text-align: right;\">21.5</td><td style = \"text-align: right;\">194</td><td style = \"text-align: right;\">4200</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">16</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">37.8</td><td style = \"text-align: right;\">18.3</td><td style = \"text-align: right;\">174</td><td style = \"text-align: right;\">3400</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">17</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">37.7</td><td style = \"text-align: right;\">18.7</td><td style = \"text-align: right;\">180</td><td style = \"text-align: right;\">3600</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">18</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">35.9</td><td style = \"text-align: right;\">19.2</td><td style = \"text-align: right;\">189</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">female</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">19</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">38.2</td><td style = \"text-align: right;\">18.1</td><td style = \"text-align: right;\">185</td><td style = \"text-align: right;\">3950</td><td style = \"text-align: left;\">male</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">20</td><td style = \"text-align: left;\">Adelie</td><td style = \"text-align: left;\">Biscoe</td><td style = \"text-align: right;\">38.8</td><td style = \"text-align: right;\">17.2</td><td style = \"text-align: right;\">180</td><td style = \"text-align: right;\">3800</td><td style = \"text-align: left;\">male</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n# Exploratory Plots\n\nWe `groupby` `species` and `sex`, `select`ing the length of number of rows. Then, we simply find the `unique` rows.\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\ng_data = @pipe data |>\n\tgroupby(_, [:species, :sex]) |>\n\tcombine(_, :sex=>length=>:counts) |>\n\tunique\nlabels = map(zip(g_data[!, :species], g_data[!, :sex])) do (i,j)\n    \"$(i)-$(j)\"\nend\nplot(labels, g_data[!, :counts], st=:bar, title=\"Counts\", label=false)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n![](index_files/figure-html/cell-5-output-1.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\n@. linear_model(x, p) = p[1]*x + p[2]\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\nlinear_model (generic function with 1 method)\n```\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\nfunction plot_corrs(data, variable)\n\tp = plot(title=variable)\n\tds1 = @pipe data |>\n\t\t_[!, [:species, variable, :body_mass_g]] |>\n\t\tgroupby(_, :species)\n\n\tfor sdf in ds1\n\t\tcolor = palette(:auto)[length(p.series_list)Ã·2 + 1]\n\t\tscatter!(sdf[!, variable], sdf[!, :body_mass_g],\n\t\t\tlabel=sdf[!, :species][1],\n\t\t\tmarkersize=2,\n\t\t\tcolor=color\n\t\t)\n\t\tfit = curve_fit(\n\t\t\tlinear_model,\n\t\t\tsdf[!, variable], sdf[!, :body_mass_g], [0., 0.],\n\t\t)\n\t\tplot!(\n\t\t\tsdf[!, variable],\n\t\t\tlinear_model(sdf[!, variable], fit.param),\n\t\t\tlabel=sdf[!, :species][1],\n\t\t\tlw = 2,\n\t\t\tcolor=color\n\t\t)\n\tend\n\treturn p\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\nplot_corrs (generic function with 1 method)\n```\n:::\n:::\n\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\nplot(\n\tplot_corrs(data, :bill_depth_mm),\n\tplot_corrs(data, :bill_length_mm),\n\tplot_corrs(data, :flipper_length_mm),\n\tlayout=(1,3),\n\tsize=(1300, 400),\n\tylabel=\"body_mass_g\"\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n![](index_files/figure-html/cell-8-output-1.svg){}\n:::\n:::\n\n\n# First Model\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\nfit_model_1 = lm(\n\t@formula(body_mass_g ~ bill_depth_mm + bill_length_mm + flipper_length_mm + sex),\n\tdata,\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nStatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}\n\nbody_mass_g ~ 1 + bill_depth_mm + bill_length_mm + flipper_length_mm + sex\n\nCoefficients:\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n                         Coef.  Std. Error      t  Pr(>|t|)   Lower 95%    Upper 95%\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n(Intercept)        -2288.46      631.58     -3.62    0.0003  -3530.92    -1046.01\nbill_depth_mm        -86.0882     15.5698   -5.53    <1e-07   -116.718     -55.4589\nbill_length_mm        -2.32868     4.6843   -0.50    0.6194    -11.5437      6.88638\nflipper_length_mm     38.8258      2.44776  15.86    <1e-41     34.0105     43.6411\nsex: male            541.029      51.7098   10.46    <1e-21    439.304     642.753\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n:::\n\n\nWe can do the ftest against the null model as\n\n::: {.cell execution_count=9}\n``` {.julia .cell-code}\nftest(fit_model_1.model)\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\nF-test against the null model:\nF-statistic: 381.30 on 333 observations and 4 degrees of freedom, p-value: <1e-99\n```\n:::\n:::\n\n\n## Diagnostic Plots\n\n::: {.cell execution_count=10}\n``` {.julia .cell-code}\nx = predict(fit_model_1)\ny = residuals(fit_model_1)\nystd = (y .- mean(y))/std(y);\n```\n:::\n\n\n::: {.cell execution_count=11}\n``` {.julia .cell-code}\nscatter(x, y, title=\"Residuals vs Prediction\", label=false)\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n![](index_files/figure-html/cell-12-output-1.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=12}\n``` {.julia .cell-code}\nqqplot(Normal(), ystd, title=\"qqplot of the standardized residuals\")\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n![](index_files/figure-html/cell-13-output-1.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.julia .cell-code}\nscatter(x, sqrt.(abs.(ystd)), ylabel=\"âˆš(Std Residuals)\", xlabel=\"Prediction\", label=false)\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n![](index_files/figure-html/cell-14-output-1.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=14}\n``` {.julia .cell-code}\ncdist = cooksdistance(fit_model_1)\nplot(cdist, st=:sticks, title=\"Cook's Distance\", label=\"\")\nhigh_dist = findall(>(0.02), cdist)\nhist_dist_annots = map(high_dist) do i\n\t(i, cdist[i]+0.002, text(string(i), 8))\nend\nannotate!(hist_dist_annots)\nhline!([0.02], linestyle=:dash, label=false)\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n![](index_files/figure-html/cell-15-output-1.svg){}\n:::\n:::\n\n\n::: callout-caution\n## Unimplemented function\n\nThe leverage function is not implemented in the `GLM.jl` package yet, but there is a [PR in draft](https://github.com/JuliaStats/GLM.jl/pull/510).\n:::\n\n# Second Model\n\n::: {.cell execution_count=15}\n``` {.julia .cell-code}\nfit_model_2 = lm(\n\t@formula(body_mass_g ~ species + island + bill_depth_mm + bill_length_mm + flipper_length_mm + sex),\n\tdata,\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```\nStatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}\n\nbody_mass_g ~ 1 + species + island + bill_depth_mm + bill_length_mm + flipper_length_mm + sex\n\nCoefficients:\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n                         Coef.  Std. Error      t  Pr(>|t|)   Lower 95%  Upper 95%\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n(Intercept)         -1500.03     575.822    -2.61    0.0096  -2632.85    -367.207\nspecies: Chinstrap   -260.306     88.5506   -2.94    0.0035   -434.513    -86.0996\nspecies: Gentoo       987.761    137.238     7.20    <1e-11    717.771   1257.75\nisland: Dream         -13.1031    58.5407   -0.22    0.8230   -128.271    102.065\nisland: Torgersen     -48.0636    60.9215   -0.79    0.4307   -167.915     71.7881\nbill_depth_mm          67.5754    19.8213    3.41    0.0007     28.5808   106.57\nbill_length_mm         18.1893     7.13639   2.55    0.0113      4.1498    32.2288\nflipper_length_mm      16.2385     2.93946   5.52    <1e-07     10.4557    22.0213\nsex: male             387.224     48.1382    8.04    <1e-13    292.521    481.927\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n:::\n\n\n# Comparing the two models\n\n`GLM.jl` provides an interface to run an FTest to compare if either model is better than the other.\n\n::: {.cell execution_count=16}\n``` {.julia .cell-code}\nftest(fit_model_1.model, fit_model_2.model)\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```\nF-test: 2 models fitted on 333 observations\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n     DOF  Î”DOF            SSR            Î”SSR      RÂ²     Î”RÂ²       F*   p(>F)\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n[1]    6        38099290.7809                  0.8230                         \n[2]   10     4  26859432.2504  -11239858.5304  0.8752  0.0522  33.8960  <1e-22\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n:::\n\n\nInferring this test is left as an exercise to the reader, with reference to [the previous blogpost on Parametric tests](https://dataalltheway.com/posts/010-parametric-hypothesis-tests-r/#sec-f-test).\n\n# Using the model as a prediction\n\nThis is also left as an exercise to the reader. You can partition the data using the following function:\n\n::: {.cell execution_count=17}\n``` {.julia .cell-code}\nusing Random\nfunction partition_data(data, train_frac = 0.7)\n    n = nrow(data)\n    idx = shuffle(1:n)\n    train_idx = @view idx[1:floor(Int, train_frac*n)]\n    test_idx = @view idx[(floor(Int, train_frac*n)+1):n]\n    data[train_idx, :], data[test_idx, :]\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\npartition_data (generic function with 2 methods)\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}