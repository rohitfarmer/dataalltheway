<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Data All The Way</title>
<link>https://www.dataalltheway.com/blog.html</link>
<atom:link href="https://www.dataalltheway.com/blog.xml" rel="self" type="application/rss+xml"/>
<description>Data All The Way: A tutorial website with concepts, methods, and example code on various data science, statistics, and machine learning topics.</description>
<generator>quarto-1.2.215</generator>
<lastBuildDate>Tue, 25 Oct 2022 04:00:00 GMT</lastBuildDate>
<item>
  <title>Sources of open data for statistics, data science, and machine learning</title>
  <dc:creator>Rohit Farmer</dc:creator>
  <link>https://www.dataalltheway.com/posts/007-open-data-for-datascience/index.html</link>
  <description><![CDATA[ 



<div class="callout-note callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Updates
</div>
</div>
<div class="callout-body-container callout-body" data-collapce="true">
<p>2022-10-25 Initial uncomplete post</p>
</div>
</div>
<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>R and Python, the two most popular data science and machine learning programming languages, come with a default data set for demonstration and educational purposes. Moreover, many popular data science libraries such as tidyverse, lme4, nlme, MASS, survival, Bioconductor, and sklearn, amongst others, also contain example datasets for unit testing and demonstration. However, even though the included data are carefully selected, most of them are old (from the 1970s and ’80s) and hence limited in sample size (due to the limitation in the then available computing power) and may not be more than a toy example in the current context. Therefore, in a learning path after utilizing the default datasets for initial testing of a statistical function or a machine learning model, it’s both desired and recommended to practice on a real-life dataset. Working on a real-life dataset that is apt in the current context of data science and computing resources would not only teach the desired statistical/machine learning technique but also expose the learner to challenges that are usually not associated with toy datasets—for example, class imbalance, missing values, wrongly labeled datatypes, statistical noise, etc.</p>
<p>For a real-life dataset, I recommend using open data released by government agencies and other non-government organizations as part of their openness in operations. These datasets are not only of adequate size but also represent what is happening around us in a field of interest. Many countries around the world release data to inform citizens about their operations and fair practices. However, I do not think, other than the established data analytics-based companies and research groups, ordinary citizens ever look into such resources. I bet many would not even know that their government agencies are making ample amounts of data available for scrutiny. Therefore, in my opinion, budding data scientists should take it upon themselves to utilize these datasets in place of toy examples to not only justify the existence of such a resource but also, through analysis, gain first-hand insight and transfer it to their friends, family, and broader audience. Such a practice by amateur data scientists may have far-reaching implications than what I can convey here.</p>
<p>In the sections below, for completeness, I will briefly discuss how to access default datasets available in R and then move on to other resources, including open government data mentioned earlier.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">suppressMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(DT))</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">suppressMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(tidyverse))</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">suppressMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(kableExtra))</span></code></pre></div>
</details>
</div>
<section id="default-datasets-in-r" class="level2">
<h2 class="anchored" data-anchor-id="default-datasets-in-r">Default datasets in R</h2>
<p>In R (v4.1.3), there are 104 datasets for various statistical and machine-learning tasks. The commands in the cell below list all the datasets available by default (Table&nbsp;1) and across all the installed packages, respectively. <a href="http://www.sthda.com/english/wiki/r-built-in-data-sets">This article</a> summarizes some of R’s popular datasets, namely mtcars, iris, etc.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Default datasets</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">data</span>()</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;"># Datasets across all the installed packages</span></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;">data</span>(<span class="at" style="color: #657422;">package =</span> <span class="fu" style="color: #4758AB;">.packages</span>(<span class="at" style="color: #657422;">all.available =</span> <span class="cn" style="color: #8f5902;">TRUE</span>))</span></code></pre></div>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">dat <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data</span>()</span>
<span id="cb3-2">dat <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as_tibble</span>(dat<span class="sc" style="color: #5E5E5E;">$</span>results) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>LibPath) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-3">  dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">filter</span>(Package <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"datasets"</span>)</span>
<span id="cb3-4">knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>(dat) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-5">    <span class="fu" style="color: #4758AB;">kable_styling</span>(<span class="at" style="color: #657422;">bootstrap_options =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"striped"</span>, <span class="st" style="color: #20794D;">"hover"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-6">    <span class="fu" style="color: #4758AB;">scroll_box</span>(<span class="at" style="color: #657422;">width =</span> <span class="st" style="color: #20794D;">"100%"</span>, <span class="at" style="color: #657422;">height =</span> <span class="st" style="color: #20794D;">"300px"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="tbl-rdatasets" class="anchored">

<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:300px; overflow-x: scroll; width:100%; "><table class="table table-striped table-hover" style="margin-left: auto; margin-right: auto;"><caption>Table&nbsp;1:  Default datasets in R </caption>
 <thead>
  <tr>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> Package </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> Item </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> Title </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> AirPassengers </td>
   <td style="text-align:left;"> Monthly Airline Passenger Numbers 1949-1960 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> BJsales </td>
   <td style="text-align:left;"> Sales Data with Leading Indicator </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> BJsales.lead (BJsales) </td>
   <td style="text-align:left;"> Sales Data with Leading Indicator </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> BOD </td>
   <td style="text-align:left;"> Biochemical Oxygen Demand </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> CO2 </td>
   <td style="text-align:left;"> Carbon Dioxide Uptake in Grass Plants </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> ChickWeight </td>
   <td style="text-align:left;"> Weight versus age of chicks on different diets </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> DNase </td>
   <td style="text-align:left;"> Elisa assay of DNase </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> EuStockMarkets </td>
   <td style="text-align:left;"> Daily Closing Prices of Major European Stock Indices, 1991-1998 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> Formaldehyde </td>
   <td style="text-align:left;"> Determination of Formaldehyde </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> HairEyeColor </td>
   <td style="text-align:left;"> Hair and Eye Color of Statistics Students </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> Harman23.cor </td>
   <td style="text-align:left;"> Harman Example 2.3 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> Harman74.cor </td>
   <td style="text-align:left;"> Harman Example 7.4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> Indometh </td>
   <td style="text-align:left;"> Pharmacokinetics of Indomethacin </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> InsectSprays </td>
   <td style="text-align:left;"> Effectiveness of Insect Sprays </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> JohnsonJohnson </td>
   <td style="text-align:left;"> Quarterly Earnings per Johnson &amp; Johnson Share </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> LakeHuron </td>
   <td style="text-align:left;"> Level of Lake Huron 1875-1972 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> LifeCycleSavings </td>
   <td style="text-align:left;"> Intercountry Life-Cycle Savings Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> Loblolly </td>
   <td style="text-align:left;"> Growth of Loblolly pine trees </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> Nile </td>
   <td style="text-align:left;"> Flow of the River Nile </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> Orange </td>
   <td style="text-align:left;"> Growth of Orange Trees </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> OrchardSprays </td>
   <td style="text-align:left;"> Potency of Orchard Sprays </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> PlantGrowth </td>
   <td style="text-align:left;"> Results from an Experiment on Plant Growth </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> Puromycin </td>
   <td style="text-align:left;"> Reaction Velocity of an Enzymatic Reaction </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> Seatbelts </td>
   <td style="text-align:left;"> Road Casualties in Great Britain 1969-84 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> Theoph </td>
   <td style="text-align:left;"> Pharmacokinetics of Theophylline </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> Titanic </td>
   <td style="text-align:left;"> Survival of passengers on the Titanic </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> ToothGrowth </td>
   <td style="text-align:left;"> The Effect of Vitamin C on Tooth Growth in Guinea Pigs </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> UCBAdmissions </td>
   <td style="text-align:left;"> Student Admissions at UC Berkeley </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> UKDriverDeaths </td>
   <td style="text-align:left;"> Road Casualties in Great Britain 1969-84 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> UKgas </td>
   <td style="text-align:left;"> UK Quarterly Gas Consumption </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> USAccDeaths </td>
   <td style="text-align:left;"> Accidental Deaths in the US 1973-1978 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> USArrests </td>
   <td style="text-align:left;"> Violent Crime Rates by US State </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> USJudgeRatings </td>
   <td style="text-align:left;"> Lawyers' Ratings of State Judges in the US Superior Court </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> USPersonalExpenditure </td>
   <td style="text-align:left;"> Personal Expenditure Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> UScitiesD </td>
   <td style="text-align:left;"> Distances Between European Cities and Between US Cities </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> VADeaths </td>
   <td style="text-align:left;"> Death Rates in Virginia (1940) </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> WWWusage </td>
   <td style="text-align:left;"> Internet Usage per Minute </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> WorldPhones </td>
   <td style="text-align:left;"> The World's Telephones </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> ability.cov </td>
   <td style="text-align:left;"> Ability and Intelligence Tests </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> airmiles </td>
   <td style="text-align:left;"> Passenger Miles on Commercial US Airlines, 1937-1960 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> airquality </td>
   <td style="text-align:left;"> New York Air Quality Measurements </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> anscombe </td>
   <td style="text-align:left;"> Anscombe's Quartet of 'Identical' Simple Linear Regressions </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> attenu </td>
   <td style="text-align:left;"> The Joyner-Boore Attenuation Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> attitude </td>
   <td style="text-align:left;"> The Chatterjee-Price Attitude Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> austres </td>
   <td style="text-align:left;"> Quarterly Time Series of the Number of Australian Residents </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> beaver1 (beavers) </td>
   <td style="text-align:left;"> Body Temperature Series of Two Beavers </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> beaver2 (beavers) </td>
   <td style="text-align:left;"> Body Temperature Series of Two Beavers </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> cars </td>
   <td style="text-align:left;"> Speed and Stopping Distances of Cars </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> chickwts </td>
   <td style="text-align:left;"> Chicken Weights by Feed Type </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> co2 </td>
   <td style="text-align:left;"> Mauna Loa Atmospheric CO2 Concentration </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> crimtab </td>
   <td style="text-align:left;"> Student's 3000 Criminals Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> discoveries </td>
   <td style="text-align:left;"> Yearly Numbers of Important Discoveries </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> esoph </td>
   <td style="text-align:left;"> Smoking, Alcohol and (O)esophageal Cancer </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> euro </td>
   <td style="text-align:left;"> Conversion Rates of Euro Currencies </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> euro.cross (euro) </td>
   <td style="text-align:left;"> Conversion Rates of Euro Currencies </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> eurodist </td>
   <td style="text-align:left;"> Distances Between European Cities and Between US Cities </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> faithful </td>
   <td style="text-align:left;"> Old Faithful Geyser Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> fdeaths (UKLungDeaths) </td>
   <td style="text-align:left;"> Monthly Deaths from Lung Diseases in the UK </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> freeny </td>
   <td style="text-align:left;"> Freeny's Revenue Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> freeny.x (freeny) </td>
   <td style="text-align:left;"> Freeny's Revenue Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> freeny.y (freeny) </td>
   <td style="text-align:left;"> Freeny's Revenue Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> infert </td>
   <td style="text-align:left;"> Infertility after Spontaneous and Induced Abortion </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> iris </td>
   <td style="text-align:left;"> Edgar Anderson's Iris Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> iris3 </td>
   <td style="text-align:left;"> Edgar Anderson's Iris Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> islands </td>
   <td style="text-align:left;"> Areas of the World's Major Landmasses </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> ldeaths (UKLungDeaths) </td>
   <td style="text-align:left;"> Monthly Deaths from Lung Diseases in the UK </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> lh </td>
   <td style="text-align:left;"> Luteinizing Hormone in Blood Samples </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> longley </td>
   <td style="text-align:left;"> Longley's Economic Regression Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> lynx </td>
   <td style="text-align:left;"> Annual Canadian Lynx trappings 1821-1934 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> mdeaths (UKLungDeaths) </td>
   <td style="text-align:left;"> Monthly Deaths from Lung Diseases in the UK </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> morley </td>
   <td style="text-align:left;"> Michelson Speed of Light Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> mtcars </td>
   <td style="text-align:left;"> Motor Trend Car Road Tests </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> nhtemp </td>
   <td style="text-align:left;"> Average Yearly Temperatures in New Haven </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> nottem </td>
   <td style="text-align:left;"> Average Monthly Temperatures at Nottingham, 1920-1939 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> npk </td>
   <td style="text-align:left;"> Classical N, P, K Factorial Experiment </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> occupationalStatus </td>
   <td style="text-align:left;"> Occupational Status of Fathers and their Sons </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> precip </td>
   <td style="text-align:left;"> Annual Precipitation in US Cities </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> presidents </td>
   <td style="text-align:left;"> Quarterly Approval Ratings of US Presidents </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> pressure </td>
   <td style="text-align:left;"> Vapor Pressure of Mercury as a Function of Temperature </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> quakes </td>
   <td style="text-align:left;"> Locations of Earthquakes off Fiji </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> randu </td>
   <td style="text-align:left;"> Random Numbers from Congruential Generator RANDU </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> rivers </td>
   <td style="text-align:left;"> Lengths of Major North American Rivers </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> rock </td>
   <td style="text-align:left;"> Measurements on Petroleum Rock Samples </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> sleep </td>
   <td style="text-align:left;"> Student's Sleep Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> stack.loss (stackloss) </td>
   <td style="text-align:left;"> Brownlee's Stack Loss Plant Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> stack.x (stackloss) </td>
   <td style="text-align:left;"> Brownlee's Stack Loss Plant Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> stackloss </td>
   <td style="text-align:left;"> Brownlee's Stack Loss Plant Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> state.abb (state) </td>
   <td style="text-align:left;"> US State Facts and Figures </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> state.area (state) </td>
   <td style="text-align:left;"> US State Facts and Figures </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> state.center (state) </td>
   <td style="text-align:left;"> US State Facts and Figures </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> state.division (state) </td>
   <td style="text-align:left;"> US State Facts and Figures </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> state.name (state) </td>
   <td style="text-align:left;"> US State Facts and Figures </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> state.region (state) </td>
   <td style="text-align:left;"> US State Facts and Figures </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> state.x77 (state) </td>
   <td style="text-align:left;"> US State Facts and Figures </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> sunspot.month </td>
   <td style="text-align:left;"> Monthly Sunspot Data, from 1749 to "Present" </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> sunspot.year </td>
   <td style="text-align:left;"> Yearly Sunspot Data, 1700-1988 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> sunspots </td>
   <td style="text-align:left;"> Monthly Sunspot Numbers, 1749-1983 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> swiss </td>
   <td style="text-align:left;"> Swiss Fertility and Socioeconomic Indicators (1888) Data </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> treering </td>
   <td style="text-align:left;"> Yearly Treering Data, -6000-1979 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> trees </td>
   <td style="text-align:left;"> Diameter, Height and Volume for Black Cherry Trees </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> uspop </td>
   <td style="text-align:left;"> Populations Recorded by the US Census </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> volcano </td>
   <td style="text-align:left;"> Topographic Information on Auckland's Maunga Whau Volcano </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> warpbreaks </td>
   <td style="text-align:left;"> The Number of Breaks in Yarn during Weaving </td>
  </tr>
  <tr>
   <td style="text-align:left;"> datasets </td>
   <td style="text-align:left;"> women </td>
   <td style="text-align:left;"> Average Heights and Weights for American Women </td>
  </tr>
</tbody>
</table></div>

</div>
</div>
</div>
</section>
</section>
<section id="open-government-data" class="level1">
<h1>Open government data</h1>
<p>As I mentioned in the introduction, many governments worldwide release data for transparency and accountability; for example, <a href="https://data.gov" class="uri">https://data.gov</a>, the US federal government’s open data site. Data.gov also maintains a list of websites at <a href="https://data.gov/open-gov/" class="uri">https://data.gov/open-gov/</a> pointing to data repositories related to US cities and counties, US states, and international countries and regions. The primary aim of these repositories is to publish information online as open data using standardized, machine-readable data formats with their metadata.</p>
<p>Depending upon the type of data requested, most of the data can be downloaded in multiple machine-readable formats either via the export option on the website or programmatically through APIs (see section Section&nbsp;2.4). For example for tabular data popular formats include CSV, XML, RDF, JSON, and XML.</p>
<p>Interactive and exportable tables below show the list of websites at <a href="https://data.gov/open-gov/" class="uri">https://data.gov/open-gov/</a>.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">open_gov <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read.csv</span>(<span class="st" style="color: #20794D;">"https://data.gov/datagov/wordpress/2019/09/opendatasites91819.csv"</span>, <span class="at" style="color: #657422;">header =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;">colnames</span>(open_gov) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Item"</span>, <span class="st" style="color: #20794D;">"Website"</span>, <span class="st" style="color: #20794D;">"Type"</span>)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;">cat</span>(<span class="st" style="color: #20794D;">"Total number of entries: "</span>, <span class="fu" style="color: #4758AB;">nrow</span>(open_gov))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Total number of entries:  314</code></pre>
</div>
</div>
<section id="us-cities-and-counties" class="level2">
<h2 class="anchored" data-anchor-id="us-cities-and-counties">US cities and counties</h2>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">city_county <span class="ot" style="color: #003B4F;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">filter</span>(open_gov, Type <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"US City or County"</span>)</span>
<span id="cb6-2">DT<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">datatable</span>(city_county, <span class="at" style="color: #657422;">options =</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="at" style="color: #657422;">pageLength =</span> <span class="dv" style="color: #AD0000;">5</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">

<div id="htmlwidget-fb339c8136eae57d67fa" style="width:100%;height:auto;" class="datatables html-widget"></div>
<script type="application/json" data-for="htmlwidget-fb339c8136eae57d67fa">{"x":{"filter":"none","vertical":false,"data":[["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48"],["Albuquerque","Ann Arbor","Arvada","Asheville","Atlanta","Austin","Baltimore","Belleville","Bloomington, Indiana","Boston","Boston Enterprise GIS","Burlington GIS","Champaign","Chicago","Cook County","Denver","Gilpin County","Honolulu","Houston","Indianapolis/Marion County","Kansas City","King County","Las Vegas","Lexington","Los Angeles","Louisville","Madison","Montgomery County","NC OpenBook","New Orleans","New York City","Open Door Kentucky","Palo Alto","Philadelphia","Portland","Providence","Raleigh","Rockford","San Francisco","San Mateo County","Santa Cruz","Scottsdale","Seattle","Somerville","South Bend","Wake County","Weatherford GIS","Wellington GIS"],["http://www.cabq.gov/abq-data/","https://www.a2gov.org/services/data/Pages/default.aspx","http://arvada.org/opendata/","http://data.ashevillenc.gov/","http://gis.atlantaga.gov/","http://data.austintexas.gov/","http://data.baltimorecity.gov/","https://www.belleville.net/541/Open-Government","https://data.bloomington.in.gov/","https://data.cityofboston.gov/","http://www.cityofboston.gov/maps/","https://data-burlingtonvt.opendata.arcgis.com/","https://gis-cityofchampaign.opendata.arcgis.com/","http://data.cityofchicago.org/","http://data.cookcountyil.gov/","http://data.denvergov.org/","http://www.gilpincounty.org/departments/community_development/gis_maps","https://data.honolulu.gov/","http://data.houstontx.gov/","http://data.indy.gov/","https://data.kcmo.org/","https://data.kingcounty.gov/","https://www.lasvegasnevada.gov/Government/Transparency","https://data.lexingtonky.gov/","https://controllerdata.lacity.org/browse","https://data.louisvilleky.gov/","https://data.cityofmadison.com/","https://data.montgomerycountymd.gov/","https://www.nc.gov/services/open-book","http://data.nola.gov/","http://www.nyc.gov/data/","duplicate of Kentucky","http://data.cityofpaloalto.org/","http://www.opendataphilly.org/","http://civicapps.org/datasets/","https://data.providenceri.gov/","http://www.raleighnc.gov/open/","https://data.illinois.gov/organization/city-of-rockford","http://www.datasf.org/","https://data.smcgov.org/","http://data-cruzgis.opendata.arcgis.com/","http://data.scottsdaleaz.gov/","http://data.seattle.gov/","http://data.somervillema.gov/","https://data.southbendin.gov/","http://www.wakegov.com/data/Pages/default.aspx","http://ci.weatherford.tx.us/117/GISMapping","https://www.wellingtonfl.gov/288/Geographic-Information-System-GIS"],["US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County","US City or County"]],"container":"<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>Item<\/th>\n      <th>Website<\/th>\n      <th>Type<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>","options":{"pageLength":5,"columnDefs":[{"orderable":false,"targets":0}],"order":[],"autoWidth":false,"orderClasses":false,"lengthMenu":[5,10,25,50,100]}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
<section id="us-states" class="level2">
<h2 class="anchored" data-anchor-id="us-states">US states</h2>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">us_state <span class="ot" style="color: #003B4F;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">filter</span>(open_gov, Type <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"US State"</span>, <span class="st" style="color: #20794D;">"Other State Related"</span>))</span>
<span id="cb7-2">DT<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">datatable</span>(us_state, <span class="at" style="color: #657422;">options =</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="at" style="color: #657422;">pageLength =</span> <span class="dv" style="color: #AD0000;">5</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">

<div id="htmlwidget-4d42e2d169cf5ea0c0e6" style="width:100%;height:auto;" class="datatables html-widget"></div>
<script type="application/json" data-for="htmlwidget-4d42e2d169cf5ea0c0e6">{"x":{"filter":"none","vertical":false,"data":[["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"],["Alabama","Alaska","Arizona","Arizona Goelogical Survey","Arkansas ","Arkansas Geographic Information Office","California","Colorado","Connecticut","Delaware","Denver Regional Council","District of Columbia","Florida","Georgia","Hawaii","Hawaii GIS","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Missouri Accountability Portal","Montana","Nebraska","New Hampshire","New Jersey","New Mexico","New York","New York State Data Center","North Carolina","North Dakota GIS Hub","NY Department of Health","NY State Senate","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina GIS ","South Dakota","Tennessee","Texas","Texas Transparency","Utah","Vermont","Virginia","Washington","West Virginia GIS","Wisconsin GIS ","Wyoming GIS "],["http://open.alabama.gov/","http://dggs.alaska.gov/pubs/series/dggs/digital-data-series","http://openbooks.az.gov/app/transparency/index.html","https://azgs.arizona.edu/index.php","https://transparency.arkansas.gov/","http://gis.arkansas.gov/","http://data.ca.gov/","https://data.colorado.gov/","http://transparency.ct.gov/html/main.asp","http://www.delaware.gov/data/","https://drcog.org/","http://data.dc.gov/","http://www.floridahasarighttoknow.com/","http://www.open.georgia.gov/","http://data.hawaii.gov/","http://gis.hicentral.com/","http://data.gis.idaho.gov/","http://data.illinois.gov/","http://www.stats.indiana.edu/","http://data.iowa.gov/","http://www.kansas.gov/KanView/","https://transparency.ky.gov/Pages/default.aspx","https://wwwcfprd.doa.louisiana.gov/latrac/portal.cfm","https://www.maine.gov/megis/catalog/","https://opendata.maryland.gov/","https://opendata.digital.mass.gov/#/","http://www.michigan.gov/data/","http://www.state.mn.us/opendata/data.html","http://opendata.gis.ms.gov/","http://data.mo.gov/","http://mapyourtaxes.mo.gov/MAP/Portal/Default.aspx","https://data.mt.gov/","https://www.nebraska.gov/government/open-data/","https://www.nh.gov/doit/open-source/index.htm","https://data.nj.gov/","http://www.sunshineportalnm.com/","https://data.ny.gov/","http://esd.ny.gov/NYSDataCenter.html","https://www.nc.gov/government/open-government","https://www.gis.nd.gov/","https://health.data.ny.gov/","https://www.nysenate.gov/","http://transparency.ohio.gov/","https://data.ok.gov/","http://data.oregon.gov/","https://data.pa.gov/","http://www.ri.gov/data/","http://www.gis.sc.gov/data.html","http://open.sd.gov/","https://www.tn.gov/finance/sts-gis/gis/data.html","https://data.texas.gov/","http://www.texastransparency.org/opendata/index.php","http://www.utah.gov/data/","https://data.vermont.gov/"," http://data.virginia.gov","http://data.wa.gov/","http://mapwv.gov/gis_services.html","http://data-wi-dnr.opendata.arcgis.com/","https://www.geospatialhub.org/"],["US State","US State","US State","Other State Related","US State","Other State Related","US State","US State","US State","US State","Other State Related","US State","US State","US State","US State","Other State Related","US State","US State","US State","US State","US State","US State","US State","US State","US State","US State","US State","US State","US State","US State","Other State Related","US State","US State","US State","US State","US State","US State","Other State Related","US State","US State","Other State Related","Other State Related","US State","US State","US State","US State","US State","Other State Related","US State","US State","US State","Other State Related","US State","US State","US State","US State","Other State Related","Other State Related","Other State Related"]],"container":"<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>Item<\/th>\n      <th>Website<\/th>\n      <th>Type<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>","options":{"pageLength":5,"columnDefs":[{"orderable":false,"targets":0}],"order":[],"autoWidth":false,"orderClasses":false,"lengthMenu":[5,10,25,50,100]}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
<section id="international-countries-and-regions" class="level2">
<h2 class="anchored" data-anchor-id="international-countries-and-regions">International countries and regions</h2>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">int_count <span class="ot" style="color: #003B4F;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">filter</span>(open_gov, Type <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"International Country"</span>, <span class="st" style="color: #20794D;">"International Regional"</span>))</span>
<span id="cb8-2">DT<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">datatable</span>(int_count, <span class="at" style="color: #657422;">options =</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="at" style="color: #657422;">pageLength =</span> <span class="dv" style="color: #AD0000;">5</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">

<div id="htmlwidget-62363036cdf4236ebc5a" style="width:100%;height:auto;" class="datatables html-widget"></div>
<script type="application/json" data-for="htmlwidget-62363036cdf4236ebc5a">{"x":{"filter":"none","vertical":false,"data":[["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206"],["Aarhus","Alberta","Alkmaar","Allerdale","Amsterdam O+S","Angers","Antwerp","Aquitaine and Gironde","Aragon","Argentina ","Asturias","Australia","Australian Capital Territory","Austria","Badalona","Baden-W&lt;9f&gt;rttemberg","Bah&lt;92&gt;a Blanca","Bahrain","Balearic Islands","Barcelona","Bari","Belgium","Berlin","Birmingham","Bologna","Brazil","Bremen","Brisbane","British Columbia","British Columbia Local Government","Buenos Aires, Argentina","Burlington","Canada","Castilla-La Mancha","Catalonya","Chamber of Deputies","Chile","Colombia","Costa Rica","County of Grand Prairie No. 1","CSIRO","Denmark","District of North Vancouver","Edmonton","Emilia-Romagna Open Data","Enschede","Estonia","European Union","Euskadi (Basque Country)","Fingal","Finland","France","Fredericton","Galicia","Germany","Ghana","Graz","Great Manchester","Greece","Guelph","Halifax","Hamburg","Hamilton","Hauts-de-Seine","Helsinki Region Infoshare","Hong Kong","India","Indonesia","Ireland","Italian Parliament","Italy","Italy Senate","Japan","Junta de Castilla y Le&lt;97&gt;n","Jyv&lt;8a&gt;skyl&lt;8a&gt;","Kent","Kenya","La Rochelle","Langley","Le Mans","Leipzig","Library of the National Congress","Lichfield","Linz","Lleida","Loire-Atlantique","Lombardy","London","London","Lucca","Manchester","Medicine Hat","Merton Council","METI","Mexico","Milan","Ministry of Finances","Misiones Province, Argentina","Mississauga","Moers","Moldova","Montevideo","Montpellier","Montreal","Morocco","Moscow","Mosman Council","Nanaimo","Nantes","Navarre","Netherlands","New South Wales","New Zealand","Niagara Falls","Niagara Region","North Devon Council","North Okanagan","Norway","Oman","Ontario","Open GEO-Data (Amsterdam)","Open Kent","Open UN-Habitat Transparency Initiative","Organization for Economic Cooperation and Development (OECD)","Ottawa","Pamplona","Paris","Peru","Philippines&lt;ca&gt;","Piedmont","Portugal","Prince George","Puglia","Quebec (City)","Quebec (Province)","Queensland","Red Deer","Redbridge","Regina","Region of Peel","Rennes","Republic of Korea","Research Data Australia","Rheinland Pfalz","Romania","Rome (Province)","Rostock","Rotterdam","Russia","Russian Open Budget","Russian Open Police","Saanich","Salford City Council","Sao Paulo","Sardinia","Saskatoon","Sa&lt;99&gt;ne-et-Loire","Seoul","Shizuoka Prefecture(Shizuoka)","Sierra Leone","Singapore","Slovak Republic","South Africa","South Australia","South Australia Spatial Planning","Spain","Stockholm","Surrey","Sutton","Sweden","Tampere","Tanzania","Tasmania &lt;d0&gt; Spatial Data Work","Terrassa","Timor Leste","Toronto","Toulouse","Trafford Council","Trentino","Trento","Trinidad and Tobago","Tunisia","Turin","Tuscany","Tyrol","Udine","Ukraine","United Arab Emirates","United Kingdom","United Nations","Uruguay","Vancouver","Veneto","Venice","Vicenza Geodata","Victoria","Vienna","Vorarlberg","Warwickshire","Waterloo","Western Australia &lt;d0&gt; NewSLIP","Windsor","World Bank","Wyre Council","Zaragoza","Zurich"],["http://www.odaa.dk/","https://open.alberta.ca/opendata","http://www.alkmaar.nl/opendata","http://datacatalogs.org/catalog/allerdale","http://www.os.amsterdam.nl/","http://data.angers.fr/","http://opendata.antwerpen.be/","http://datalocale.fr/","http://opendata.aragon.es/","https://datos.gob.ar","https://www.asturias.es/portal/site/webasturias/menuitem.7b2ff7592927f53571a70084ec12b2a0/?vgnextoid=2cab7cd61f918510VgnVCM100000ce212b0aRCRD&amp;i18n.http.lang=es","http://data.gov.au/","https://www.data.act.gov.au/","http://data.gv.at/","http://badalona.cat/portalWeb/badalona.portal?_nfpb=true&amp;_pageLabel=opendata","http://opendata.service-bw.de/Seiten/default.aspx","http://datos.bahiablanca.gob.ar/home","http://www.bahrain.bh/wps/portal/data/","http://www.caib.es/caibdatafront/","https://opendata-ajuntament.barcelona.cat/en/","http://opendata.comune.bari.it/","http://data.gov.be/","http://daten.berlin.de/","http://www.birmingham.gov.uk/open-data","http://dati.comune.bologna.it/","http://dados.gov.br/","http://www.daten.bremen.de/","https://www.data.brisbane.qld.gov.au/","http://www.data.gov.bc.ca/","http://www.civicinfo.bc.ca/","http://data.buenosaires.gob.ar/","https://navburl-burlington.opendata.arcgis.com/pages/data","http://open.canada.ca/en","https://datosabiertos.castillalamancha.es/","http://dadesobertes.gencat.cat/","http://dati.camera.it/it/","http://datos.gob.cl/","www.datos.gov.co","http://datosabiertos.presidencia.go.cr/home","http://www.countygp.ab.ca/EN/main/community/maps-gis/open-data/data.html","https://data.csiro.au/dap/home?execution=e1s1","http://digitaliser.dk/","http://geoweb.dnv.org/data/","http://data.edmonton.ca/","http://dati.emilia-romagna.it/","http://opendata.enschede.nl/","https://www.europeandataportal.eu/en/news/open-data-portal-estonia","http://open-data.europa.eu/","http://opendata.euskadi.net/","http://data.fingal.ie/","http://www.suomi.fi/suomifi/tyohuone/yhteiset_palvelut/avoin_data/","http://data.gouv.fr/","http://www.fredericton.ca/en/citygovernment/DataMain.asp","http://abertos.xunta.es/portada/","https://www.govdata.de/","http://data.gov.gh","http://data.graz.gv.at/","http://open.manchester.gov.uk/","http://geodata.gov.gr/geodata/","https://guelph.ca/city-hall/open-government/","https://www.halifax.ca/home/open-data","http://daten.hamburg.de/","http://www.hamilton.ca/ProjectsInitiatives/OpenData/","https://opendata.hauts-de-seine.fr/pages/accueil/","https://hri.fi/en_gb/","https://www.opendatahk.com/","http://data.gov.in/","https://data.go.id/","http://www.statcentral.ie/","http://dati.camera.it/it/","http://www.dati.gov.it/","http://dati.senato.it/","https://www.data.go.jp/?lang=english","http://www.datosabiertos.jcyl.es/","http://data.jyvaskyla.fi/","https://www.kent.gov.uk/about-the-council/information-and-data/data-about-the-council","http://opendata.go.ke/","http://www.opendata.larochelle.fr/","https://data-tol.opendata.arcgis.com/","http://www.lemans.fr/citoyen/la-collectivite/lopen-data/","https://opendata.leipzig.de/","http://datos.bcn.cl/es/","http://lichfielddc.gov.uk/","http://data.linz.gv.at/","http://cartolleida.paeria.es/lleidaoberta/inici.aspx","http://data.loire-atlantique.fr/","https://dati.lombardia.it/","http://www.london.ca/city-hall/open-data/Pages/default.aspx","https://data.london.gov.uk/","http://opendata.provincia.lucca.it/","http://open.manchester.gov.uk/","https://www.medicinehat.ca/government/departments/information-and-computer-services/gis-mapping","http://www.merton.gov.uk/council/dp-foi/opendata.htm","https://www.meti.go.jp/english/statistics/","http://datos.gob.mx/","http://dati.comune.milano.it/","http://government.ru/en/department/69/","http://www.datos.misiones.gov.ar/","http://www.mississauga.ca/portal/residents/publicationsopendatacatalogue","http://www.offenedaten.moers.de/","http://data.gov.md/","http://montevideo.gub.uy/institucional/montevideo-abierto","http://opendata.montpelliernumerique.fr/","http://donnees.ville.montreal.qc.ca/","http://data.gov.ma/","http://data.mos.ru/","https://www.mosman.nsw.gov.au/","http://www.nanaimo.ca/datafeeds","https://data.nantesmetropole.fr/pages/home/","http://www.navarra.es/home_es/Open-Data/","http://data.overheid.nl/","http://data.nsw.gov.au/","http://www.data.govt.nz/","http://www.niagarafalls.ca/services/open/data","http://www.niagararegion.ca/government/opendata/default.aspx","https://www.northdevon.gov.uk/open-data/","http://www.rdno.ca/index.php/maps/digital-data","http://data.norge.no/","http://www.oman.om/opendata","http://www.ontario.ca/government/government-ontario-open-data","http://maps.amsterdam.nl/open_geodata/","duplicate of Kent ","http://open.unhabitat.org/","http://stats.oecd.org/","http://data.ottawa.ca/","https://opendata.pamplona.es/","https://opendata.paris.fr/explore/?sort=modified","https://odpe.org/","http://data.gov.ph/","http://www.dati.piemonte.it/","http://www.dados.gov.pt/pt/inicio/inicio.aspx","https://data-cityofpg.opendata.arcgis.com/","http://www.dati.puglia.it/","http://donnees.ville.quebec.qc.ca/","https://www.donneesquebec.ca/fr/","https://data.qld.gov.au/","https://data.reddeer.ca/datasets","http://data.redbridge.gov.uk/","http://open.regina.ca/","http://opendata.peelregion.ca/","https://data.rennesmetropole.fr/explore/","http://www.data.go.kr/","http://researchdata.ands.org.au/","http://www.daten.rlp.de/","http://data.gov.ro/","http://www.opendata.provincia.roma.it/","https://www.opendata-hro.de/","http://rotterdamopendata.nl","http://opengovdata.ru/","http://budget.gov.ru/data/opendata","http://data.openpolice.ru/","http://www.saanich.ca/data/catalogue/index.php","https://salforddataquay.uk/","http://www.governoaberto.sp.gov.br/view/","http://www.sardegnageoportale.it/index.html","https://www.saskatoon.ca/moving-around/transit/open-data-saskatoon-transit","http://www.opendata71.fr/","http://data.seoul.go.kr/","http://open-data.pref.shizuoka.jp/htdocs/","https://opendatasl.gov.sl/","http://data.gov.sg/","http://data.gov.sk/","http://southafrica.opendataforafrica.org/","http://data.sa.gov.au","https://www.saplanningportal.sa.gov.au/","http://datos.gob.es/","https://dataportalen.stockholm.se/dataportalen/","http://www.surrey.ca/city-services/658.aspx","https://www.sutton.gov.uk/index.aspx?articleid=15338","http://xn--ppnadata-m4a.se/","http://tampere.fi/avoindata","http://opendata.go.tz/","https://dpipwe.tas.gov.au/land-tasmania/location-data-products-and-services/tasmanian-spatial-data","http://opendata.terrassa.cat/","http://www.transparency.gov.tl/","http://www.toronto.ca/open","https://data.toulouse-metropole.fr/pages/accueil/","http://www.trafford.gov.uk/opendata/","http://dati.trentino.it/","http://www.territorio.provincia.tn.it/portal/server.pt?open=512&amp;objID=862&amp;PageID=32157&amp;mode=2&amp;in_hi_userid=18720&amp;cached=true","http://data.gov.tt/","http://www.data.gov.tn/","http://www.comune.torino.it/aperto","http://dati.toscana.it/","http://www.tirol.gv.at/applikationen/e-government/data/","http://opendata.comune.udine.gov.it/","http://data.gov.ua/","https://bayanat.ae/","http://data.gov.uk/","http://data.un.org/","https://data.org.uy/","http://data.vancouver.ca/","http://dati.veneto.it/","http://dati.venezia.it/","http://geoportale.provincia.vicenza.it/home.asp?sezione=1&amp;cat=8","http://www.data.vic.gov.au/","http://data.wien.gv.at/","http://data.vorarlberg.gv.at/","https://apps.warwickshire.gov.uk/OpenData","http://opendata.waterloo.ca/","https://www2.landgate.wa.gov.au/web/guest/slipstream-e-news","http://www.citywindsor.ca/opendata/pages/open-data-catalogue.aspx","http://data.worldbank.org/","http://www.wyre.gov.uk/opendata","http://www.zaragoza.es/ciudad/risp/","https://data.stadt-zuerich.ch/"],["International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Country","International Regional","International Country","International Regional","International Country","International Regional","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Country","International Country","International Country","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Country","International Country","International Regional","International Regional","International Country","International Country","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Country","International Country","International Country","International Country","International Regional","International Country","International Regional","International Country","International Regional","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Regional","International Regional","International Country","International Regional","International Country","International Regional","International Regional","International Regional","International Regional","International Country","International Country","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Country","International Country","International Regional","International Country","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Country","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Country","International Country","International Country","International Country","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Country","International Regional","International Country","International Regional","International Regional","International Country","International Regional","International Regional","International Regional","International Regional","International Regional","International Country","International Country","International Regional","International Regional","International Regional","International Regional","International Country","International Country","International Country","International Regional","International Country","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional","International Regional"]],"container":"<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>Item<\/th>\n      <th>Website<\/th>\n      <th>Type<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>","options":{"pageLength":5,"columnDefs":[{"orderable":false,"targets":0}],"order":[],"autoWidth":false,"orderClasses":false,"lengthMenu":[5,10,25,50,100]}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
<section id="sec-marylandapi" class="level2">
<h2 class="anchored" data-anchor-id="sec-marylandapi">An example of using Maryland state open data via an API</h2>
<p>Since I live and work in Maryland, I want to see how wages in Maryland and its counties have changed over time. I also want to test if Montgomery county (where I live) has different wages compared to Frederick, Howard, and Prince George’s counties which borders Montgomery on the north, east, and south sides. Therefore, in this example, I will fetch <a href="https://opendata.maryland.gov/Demographic/Maryland-Average-Wage-Per-Job-Current-Dollars-2010/mk5a-nf44">Maryland Average Wage Per Job (Current Dollars): 2010-2020</a> data via API using <a href="https://cran.r-project.org/web/packages/RSocrata/index.html">RSocrata library</a> in R and carry out some analysis.</p>
<div class="callout-note callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>See <a href="https://dev.socrata.com/" class="uri">https://dev.socrata.com/</a> to learn more about how to work with open data APIs in various programming languages.</p>
</div>
</div>
<p>In Table&nbsp;2, each row has an average wage for a year for Maryland, and each of its counties (columns) from 2010-2020 and Figure&nbsp;1 shows the same data as a line graph depicting the change in wages (y-axis) over time (x-axis).</p>
<p>Table&nbsp;3 lists the results of an unpaired two-sample t-test between wages from Montgomery and Frederick, Howard, and Prince George’s counties. As you can see from the t-test results, wages differ between Montgomery and Frederick, Howard, and Prince George’s counties, with Montogomery county residents earning higher than all its three bordering counties.</p>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">library</span>(RSocrata)</span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;"># Fetch the data using the API endpoint</span></span>
<span id="cb9-3">maw <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read.socrata</span>(<span class="st" style="color: #20794D;">"https://opendata.maryland.gov/resource/mk5a-nf44.json"</span>)</span>
<span id="cb9-4">knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>(dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">select</span>(maw, <span class="sc" style="color: #5E5E5E;">-</span>date_created)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-5">    <span class="fu" style="color: #4758AB;">kable_styling</span>(<span class="at" style="color: #657422;">bootstrap_options =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"striped"</span>, <span class="st" style="color: #20794D;">"hover"</span>, <span class="st" style="color: #20794D;">"condensed"</span>, <span class="st" style="color: #20794D;">"responsive"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-6">    <span class="fu" style="color: #4758AB;">scroll_box</span>(<span class="at" style="color: #657422;">width =</span> <span class="st" style="color: #20794D;">"100%"</span>, <span class="at" style="color: #657422;">height =</span> <span class="st" style="color: #20794D;">"400px"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="tbl-maw" class="anchored">

<div style="border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; overflow-x: scroll; width:100%; "><table class="table table-striped table-hover table-condensed table-responsive" style="margin-left: auto; margin-right: auto;"><caption>Table&nbsp;2:  Maryland Average Wage Per Job (Current Dollars): 2010-2020 </caption>
 <thead>
  <tr>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> year </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> maryland </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> allegany_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> anne_arundel_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> baltimore_city </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> baltimore_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> calvert_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> caroline_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> carroll_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> cecil_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> charles_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> dorchester_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> frederick_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> garrett_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> harford_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> howard_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> kent_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> montgomery_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> prince_george_s_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> queen_anne_s_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> somerset_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> st_mary_s_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> talbot_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> washington_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> wicomico_county </th>
   <th style="text-align:left;position: sticky; top:0; background-color: #FFFFFF;"> worcester_county </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> 2010 </td>
   <td style="text-align:left;"> 53096 </td>
   <td style="text-align:left;"> 35771 </td>
   <td style="text-align:left;"> 56745 </td>
   <td style="text-align:left;"> 55640 </td>
   <td style="text-align:left;"> 49986 </td>
   <td style="text-align:left;"> 42726 </td>
   <td style="text-align:left;"> 34616 </td>
   <td style="text-align:left;"> 38027 </td>
   <td style="text-align:left;"> 42027 </td>
   <td style="text-align:left;"> 41290 </td>
   <td style="text-align:left;"> 35489 </td>
   <td style="text-align:left;"> 48018 </td>
   <td style="text-align:left;"> 31591 </td>
   <td style="text-align:left;"> 46741 </td>
   <td style="text-align:left;"> 58130 </td>
   <td style="text-align:left;"> 36334 </td>
   <td style="text-align:left;"> 65178 </td>
   <td style="text-align:left;"> 51808 </td>
   <td style="text-align:left;"> 36018 </td>
   <td style="text-align:left;"> 38228 </td>
   <td style="text-align:left;"> 60032 </td>
   <td style="text-align:left;"> 37845 </td>
   <td style="text-align:left;"> 38228 </td>
   <td style="text-align:left;"> 38472 </td>
   <td style="text-align:left;"> 30799 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> 2011 </td>
   <td style="text-align:left;"> 54517 </td>
   <td style="text-align:left;"> 36677 </td>
   <td style="text-align:left;"> 58011 </td>
   <td style="text-align:left;"> 57027 </td>
   <td style="text-align:left;"> 50914 </td>
   <td style="text-align:left;"> 43431 </td>
   <td style="text-align:left;"> 35981 </td>
   <td style="text-align:left;"> 39039 </td>
   <td style="text-align:left;"> 42465 </td>
   <td style="text-align:left;"> 42200 </td>
   <td style="text-align:left;"> 35718 </td>
   <td style="text-align:left;"> 48794 </td>
   <td style="text-align:left;"> 32484 </td>
   <td style="text-align:left;"> 48558 </td>
   <td style="text-align:left;"> 60448 </td>
   <td style="text-align:left;"> 36815 </td>
   <td style="text-align:left;"> 67247 </td>
   <td style="text-align:left;"> 52844 </td>
   <td style="text-align:left;"> 36437 </td>
   <td style="text-align:left;"> 39652 </td>
   <td style="text-align:left;"> 63057 </td>
   <td style="text-align:left;"> 38462 </td>
   <td style="text-align:left;"> 39420 </td>
   <td style="text-align:left;"> 38915 </td>
   <td style="text-align:left;"> 31438 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> 2012 </td>
   <td style="text-align:left;"> 55466 </td>
   <td style="text-align:left;"> 36983 </td>
   <td style="text-align:left;"> 58706 </td>
   <td style="text-align:left;"> 58876 </td>
   <td style="text-align:left;"> 51722 </td>
   <td style="text-align:left;"> 44239 </td>
   <td style="text-align:left;"> 37506 </td>
   <td style="text-align:left;"> 39919 </td>
   <td style="text-align:left;"> 43260 </td>
   <td style="text-align:left;"> 42888 </td>
   <td style="text-align:left;"> 37172 </td>
   <td style="text-align:left;"> 49972 </td>
   <td style="text-align:left;"> 32506 </td>
   <td style="text-align:left;"> 49772 </td>
   <td style="text-align:left;"> 62371 </td>
   <td style="text-align:left;"> 36622 </td>
   <td style="text-align:left;"> 68159 </td>
   <td style="text-align:left;"> 53292 </td>
   <td style="text-align:left;"> 37258 </td>
   <td style="text-align:left;"> 39853 </td>
   <td style="text-align:left;"> 63698 </td>
   <td style="text-align:left;"> 39807 </td>
   <td style="text-align:left;"> 39564 </td>
   <td style="text-align:left;"> 39066 </td>
   <td style="text-align:left;"> 31641 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> 2013 </td>
   <td style="text-align:left;"> 55555 </td>
   <td style="text-align:left;"> 37827 </td>
   <td style="text-align:left;"> 59384 </td>
   <td style="text-align:left;"> 59318 </td>
   <td style="text-align:left;"> 51778 </td>
   <td style="text-align:left;"> 44126 </td>
   <td style="text-align:left;"> 38404 </td>
   <td style="text-align:left;"> 40736 </td>
   <td style="text-align:left;"> 44214 </td>
   <td style="text-align:left;"> 42909 </td>
   <td style="text-align:left;"> 37773 </td>
   <td style="text-align:left;"> 49570 </td>
   <td style="text-align:left;"> 33477 </td>
   <td style="text-align:left;"> 49624 </td>
   <td style="text-align:left;"> 62271 </td>
   <td style="text-align:left;"> 37572 </td>
   <td style="text-align:left;"> 67437 </td>
   <td style="text-align:left;"> 53441 </td>
   <td style="text-align:left;"> 36848 </td>
   <td style="text-align:left;"> 40744 </td>
   <td style="text-align:left;"> 63501 </td>
   <td style="text-align:left;"> 39901 </td>
   <td style="text-align:left;"> 40032 </td>
   <td style="text-align:left;"> 39714 </td>
   <td style="text-align:left;"> 32384 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> 2014 </td>
   <td style="text-align:left;"> 56924 </td>
   <td style="text-align:left;"> 38449 </td>
   <td style="text-align:left;"> 60551 </td>
   <td style="text-align:left;"> 61112 </td>
   <td style="text-align:left;"> 52961 </td>
   <td style="text-align:left;"> 45162 </td>
   <td style="text-align:left;"> 39383 </td>
   <td style="text-align:left;"> 41607 </td>
   <td style="text-align:left;"> 45051 </td>
   <td style="text-align:left;"> 44260 </td>
   <td style="text-align:left;"> 39094 </td>
   <td style="text-align:left;"> 50747 </td>
   <td style="text-align:left;"> 34195 </td>
   <td style="text-align:left;"> 50205 </td>
   <td style="text-align:left;"> 64784 </td>
   <td style="text-align:left;"> 38411 </td>
   <td style="text-align:left;"> 68731 </td>
   <td style="text-align:left;"> 54985 </td>
   <td style="text-align:left;"> 37932 </td>
   <td style="text-align:left;"> 41802 </td>
   <td style="text-align:left;"> 64691 </td>
   <td style="text-align:left;"> 40118 </td>
   <td style="text-align:left;"> 41018 </td>
   <td style="text-align:left;"> 40863 </td>
   <td style="text-align:left;"> 33635 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> 2015 </td>
   <td style="text-align:left;"> 58729 </td>
   <td style="text-align:left;"> 39888 </td>
   <td style="text-align:left;"> 62195 </td>
   <td style="text-align:left;"> 63389 </td>
   <td style="text-align:left;"> 54248 </td>
   <td style="text-align:left;"> 48825 </td>
   <td style="text-align:left;"> 41043 </td>
   <td style="text-align:left;"> 43325 </td>
   <td style="text-align:left;"> 46776 </td>
   <td style="text-align:left;"> 44919 </td>
   <td style="text-align:left;"> 40022 </td>
   <td style="text-align:left;"> 51510 </td>
   <td style="text-align:left;"> 35067 </td>
   <td style="text-align:left;"> 52418 </td>
   <td style="text-align:left;"> 66677 </td>
   <td style="text-align:left;"> 38741 </td>
   <td style="text-align:left;"> 71480 </td>
   <td style="text-align:left;"> 56456 </td>
   <td style="text-align:left;"> 38970 </td>
   <td style="text-align:left;"> 43397 </td>
   <td style="text-align:left;"> 65497 </td>
   <td style="text-align:left;"> 41313 </td>
   <td style="text-align:left;"> 42270 </td>
   <td style="text-align:left;"> 42599 </td>
   <td style="text-align:left;"> 34524 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> 2016 </td>
   <td style="text-align:left;"> 59710 </td>
   <td style="text-align:left;"> 40708 </td>
   <td style="text-align:left;"> 63147 </td>
   <td style="text-align:left;"> 64481 </td>
   <td style="text-align:left;"> 55159 </td>
   <td style="text-align:left;"> 53657 </td>
   <td style="text-align:left;"> 40832 </td>
   <td style="text-align:left;"> 43815 </td>
   <td style="text-align:left;"> 47300 </td>
   <td style="text-align:left;"> 46958 </td>
   <td style="text-align:left;"> 40431 </td>
   <td style="text-align:left;"> 51630 </td>
   <td style="text-align:left;"> 34925 </td>
   <td style="text-align:left;"> 52862 </td>
   <td style="text-align:left;"> 67621 </td>
   <td style="text-align:left;"> 39504 </td>
   <td style="text-align:left;"> 72904 </td>
   <td style="text-align:left;"> 57251 </td>
   <td style="text-align:left;"> 39941 </td>
   <td style="text-align:left;"> 43575 </td>
   <td style="text-align:left;"> 65937 </td>
   <td style="text-align:left;"> 41740 </td>
   <td style="text-align:left;"> 42725 </td>
   <td style="text-align:left;"> 43875 </td>
   <td style="text-align:left;"> 35260 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> 2017 </td>
   <td style="text-align:left;"> 61298 </td>
   <td style="text-align:left;"> 42143 </td>
   <td style="text-align:left;"> 64629 </td>
   <td style="text-align:left;"> 66365 </td>
   <td style="text-align:left;"> 56887 </td>
   <td style="text-align:left;"> 55922 </td>
   <td style="text-align:left;"> 42034 </td>
   <td style="text-align:left;"> 45576 </td>
   <td style="text-align:left;"> 48662 </td>
   <td style="text-align:left;"> 47673 </td>
   <td style="text-align:left;"> 41711 </td>
   <td style="text-align:left;"> 52270 </td>
   <td style="text-align:left;"> 35971 </td>
   <td style="text-align:left;"> 53775 </td>
   <td style="text-align:left;"> 68958 </td>
   <td style="text-align:left;"> 40446 </td>
   <td style="text-align:left;"> 74709 </td>
   <td style="text-align:left;"> 58829 </td>
   <td style="text-align:left;"> 42099 </td>
   <td style="text-align:left;"> 45988 </td>
   <td style="text-align:left;"> 67622 </td>
   <td style="text-align:left;"> 43105 </td>
   <td style="text-align:left;"> 44039 </td>
   <td style="text-align:left;"> 45491 </td>
   <td style="text-align:left;"> 35802 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> 2018 </td>
   <td style="text-align:left;"> 62836 </td>
   <td style="text-align:left;"> 43197 </td>
   <td style="text-align:left;"> 66458 </td>
   <td style="text-align:left;"> 67005 </td>
   <td style="text-align:left;"> 58793 </td>
   <td style="text-align:left;"> 53557 </td>
   <td style="text-align:left;"> 43190 </td>
   <td style="text-align:left;"> 45690 </td>
   <td style="text-align:left;"> 49981 </td>
   <td style="text-align:left;"> 48225 </td>
   <td style="text-align:left;"> 41987 </td>
   <td style="text-align:left;"> 53624 </td>
   <td style="text-align:left;"> 37575 </td>
   <td style="text-align:left;"> 54921 </td>
   <td style="text-align:left;"> 71300 </td>
   <td style="text-align:left;"> 42422 </td>
   <td style="text-align:left;"> 76867 </td>
   <td style="text-align:left;"> 60383 </td>
   <td style="text-align:left;"> 43582 </td>
   <td style="text-align:left;"> 45381 </td>
   <td style="text-align:left;"> 68887 </td>
   <td style="text-align:left;"> 44670 </td>
   <td style="text-align:left;"> 45846 </td>
   <td style="text-align:left;"> 45567 </td>
   <td style="text-align:left;"> 37231 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> 2019 </td>
   <td style="text-align:left;"> 64690 </td>
   <td style="text-align:left;"> 44692 </td>
   <td style="text-align:left;"> 68586 </td>
   <td style="text-align:left;"> 69930 </td>
   <td style="text-align:left;"> 60116 </td>
   <td style="text-align:left;"> 51598 </td>
   <td style="text-align:left;"> 45190 </td>
   <td style="text-align:left;"> 47189 </td>
   <td style="text-align:left;"> 52177 </td>
   <td style="text-align:left;"> 49193 </td>
   <td style="text-align:left;"> 43271 </td>
   <td style="text-align:left;"> 55621 </td>
   <td style="text-align:left;"> 38290 </td>
   <td style="text-align:left;"> 57349 </td>
   <td style="text-align:left;"> 74136 </td>
   <td style="text-align:left;"> 42575 </td>
   <td style="text-align:left;"> 78386 </td>
   <td style="text-align:left;"> 62096 </td>
   <td style="text-align:left;"> 44011 </td>
   <td style="text-align:left;"> 49234 </td>
   <td style="text-align:left;"> 70807 </td>
   <td style="text-align:left;"> 45115 </td>
   <td style="text-align:left;"> 46965 </td>
   <td style="text-align:left;"> 46620 </td>
   <td style="text-align:left;"> 38234 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> 2020 </td>
   <td style="text-align:left;"> 70446 </td>
   <td style="text-align:left;"> 48294 </td>
   <td style="text-align:left;"> 74533 </td>
   <td style="text-align:left;"> 74483 </td>
   <td style="text-align:left;"> 65743 </td>
   <td style="text-align:left;"> 55903 </td>
   <td style="text-align:left;"> 49336 </td>
   <td style="text-align:left;"> 51470 </td>
   <td style="text-align:left;"> 55854 </td>
   <td style="text-align:left;"> 53404 </td>
   <td style="text-align:left;"> 47182 </td>
   <td style="text-align:left;"> 60646 </td>
   <td style="text-align:left;"> 40690 </td>
   <td style="text-align:left;"> 62395 </td>
   <td style="text-align:left;"> 82780 </td>
   <td style="text-align:left;"> 45891 </td>
   <td style="text-align:left;"> 86138 </td>
   <td style="text-align:left;"> 66777 </td>
   <td style="text-align:left;"> 48385 </td>
   <td style="text-align:left;"> 53880 </td>
   <td style="text-align:left;"> 77490 </td>
   <td style="text-align:left;"> 48338 </td>
   <td style="text-align:left;"> 50743 </td>
   <td style="text-align:left;"> 50556 </td>
   <td style="text-align:left;"> 41605 </td>
  </tr>
</tbody>
</table></div>

</div>
</div>
</div>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">maw_gather <span class="ot" style="color: #003B4F;">&lt;-</span> maw <span class="sc" style="color: #5E5E5E;">%&gt;%</span> dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>date_created) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;">gather</span>(<span class="at" style="color: #657422;">key =</span> <span class="st" style="color: #20794D;">"county"</span>, <span class="at" style="color: #657422;">value =</span> <span class="st" style="color: #20794D;">"wage"</span>, <span class="sc" style="color: #5E5E5E;">-</span>year ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">as_tibble</span>()</span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;">ggplot</span>(maw_gather, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> year, <span class="at" style="color: #657422;">y =</span> <span class="fu" style="color: #4758AB;">as.numeric</span>(wage), <span class="at" style="color: #657422;">color =</span> county)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;">geom_line</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">group =</span> county)) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Year"</span>, <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Wage"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">""</span>) <span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.text.x =</span> <span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">angle =</span> <span class="dv" style="color: #AD0000;">90</span>, <span class="at" style="color: #657422;">vjust =</span> <span class="fl" style="color: #AD0000;">0.5</span>, <span class="at" style="color: #657422;">hjust=</span><span class="dv" style="color: #AD0000;">1</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="fig-mawplot" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://www.dataalltheway.com/posts/007-open-data-for-datascience/index_files/figure-html/fig-mawplot-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Maryland Average Wage Per Job (Current Dollars): 2010-2020</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">mft <span class="ot" style="color: #003B4F;">&lt;-</span> broom<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tidy</span>(<span class="fu" style="color: #4758AB;">t.test</span>(<span class="fu" style="color: #4758AB;">as.numeric</span>(maw<span class="sc" style="color: #5E5E5E;">$</span>montgomery_county), </span>
<span id="cb11-2">                   <span class="fu" style="color: #4758AB;">as.numeric</span>(maw<span class="sc" style="color: #5E5E5E;">$</span>frederick_county))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb11-3">                   dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">mutate</span>(<span class="st" style="color: #20794D;">"test"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"Montgomery vs. Frederick"</span>)</span>
<span id="cb11-4"></span>
<span id="cb11-5">mht <span class="ot" style="color: #003B4F;">&lt;-</span> broom<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tidy</span>(<span class="fu" style="color: #4758AB;">t.test</span>(<span class="fu" style="color: #4758AB;">as.numeric</span>(maw<span class="sc" style="color: #5E5E5E;">$</span>montgomery_county), </span>
<span id="cb11-6">                   <span class="fu" style="color: #4758AB;">as.numeric</span>(maw<span class="sc" style="color: #5E5E5E;">$</span>howard_county))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb11-7">                   dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">mutate</span>(<span class="st" style="color: #20794D;">"test"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"Montgomery vs. Howard"</span>)</span>
<span id="cb11-8"></span>
<span id="cb11-9">mpgt <span class="ot" style="color: #003B4F;">&lt;-</span> broom<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tidy</span>(<span class="fu" style="color: #4758AB;">t.test</span>(<span class="fu" style="color: #4758AB;">as.numeric</span>(maw<span class="sc" style="color: #5E5E5E;">$</span>montgomery_county), </span>
<span id="cb11-10">                    <span class="fu" style="color: #4758AB;">as.numeric</span>(maw<span class="sc" style="color: #5E5E5E;">$</span>prince_george_s_county))) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb11-11">                    dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">mutate</span>(<span class="st" style="color: #20794D;">"test"</span> <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"Montgomery vs. Prince George's"</span>)</span>
<span id="cb11-12"></span>
<span id="cb11-13">all_t <span class="ot" style="color: #003B4F;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">bind_rows</span>(mft, mht, mpgt) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-14">  dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">select</span>(<span class="fu" style="color: #4758AB;">all_of</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"test"</span>, <span class="st" style="color: #20794D;">"estimate"</span>, <span class="st" style="color: #20794D;">"estimate1"</span>, </span>
<span id="cb11-15">  <span class="st" style="color: #20794D;">"estimate2"</span>, <span class="st" style="color: #20794D;">"statistic"</span>, <span class="st" style="color: #20794D;">"p.value"</span>)))</span>
<span id="cb11-16"></span>
<span id="cb11-17">knitr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">kable</span>(all_t) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-18">    <span class="fu" style="color: #4758AB;">kable_styling</span>(<span class="at" style="color: #657422;">bootstrap_options =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"striped"</span>, <span class="st" style="color: #20794D;">"hover"</span>))</span></code></pre></div>
</details>
<div class="cell-output-display">
<div id="tbl-ttestmaw" class="anchored">

<table class="table table-striped table-hover" style="margin-left: auto; margin-right: auto;"><caption>Table&nbsp;3:  T-test results between wages from Montgomery and Frederick, Howard, and Prince George’s county </caption>
 <thead>
  <tr>
   <th style="text-align:left;"> test </th>
   <th style="text-align:right;"> estimate </th>
   <th style="text-align:right;"> estimate1 </th>
   <th style="text-align:right;"> estimate2 </th>
   <th style="text-align:right;"> statistic </th>
   <th style="text-align:right;"> p.value </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> Montgomery vs. Frederick </td>
   <td style="text-align:right;"> 20439.455 </td>
   <td style="text-align:right;"> 72476 </td>
   <td style="text-align:right;"> 52036.55 </td>
   <td style="text-align:right;"> 9.452393 </td>
   <td style="text-align:right;"> 0.0000001 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Montgomery vs. Howard </td>
   <td style="text-align:right;"> 5250.909 </td>
   <td style="text-align:right;"> 72476 </td>
   <td style="text-align:right;"> 67225.09 </td>
   <td style="text-align:right;"> 1.858408 </td>
   <td style="text-align:right;"> 0.0781124 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Montgomery vs. Prince George's </td>
   <td style="text-align:right;"> 15370.364 </td>
   <td style="text-align:right;"> 72476 </td>
   <td style="text-align:right;"> 57105.64 </td>
   <td style="text-align:right;"> 6.597893 </td>
   <td style="text-align:right;"> 0.0000030 </td>
  </tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
</section>
<section id="kaggle" class="level1">
<h1>Kaggle</h1>
</section>
<section id="zenodo-figshare-and-dryad" class="level1">
<h1>Zenodo, Figshare, and Dryad</h1>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{farmer2022,
  author = {Rohit Farmer},
  title = {Sources of Open Data for Statistics, Data Science, and
    Machine Learning},
  date = {2022-10-25},
  url = {https://www.dataalltheway.com/posts/007-open-data-for-datascience},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-farmer2022" class="csl-entry quarto-appendix-citeas">
Rohit Farmer. 2022. <span>“Sources of Open Data for Statistics, Data
Science, and Machine Learning.”</span> October 25, 2022. <a href="https://www.dataalltheway.com/posts/007-open-data-for-datascience">https://www.dataalltheway.com/posts/007-open-data-for-datascience</a>.
</div></div></section></div> ]]></description>
  <category>How To</category>
  <category>Open Data</category>
  <category>Datasets</category>
  <category>Statistics</category>
  <category>Data Science</category>
  <category>Machine Learning</category>
  <guid>https://www.dataalltheway.com/posts/007-open-data-for-datascience/index.html</guid>
  <pubDate>Tue, 25 Oct 2022 04:00:00 GMT</pubDate>
</item>
<item>
  <title>A case for using Google Colab notebooks as an alternative to web servers for scientific software</title>
  <dc:creator>Rohit Farmer</dc:creator>
  <link>https://www.dataalltheway.com/posts/006-google-colab-for-scientific-software/index.html</link>
  <description><![CDATA[ 



<div class="callout-note callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Updates
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>2022-10-18 Typo correction and included a list of links to learn more about Google Colab.<br>
2022-10-20 The title and description changed. A PDF version of the article is uploaded to Zenodo at <a href="https://doi.org/10.5281/zenodo.7232109" class="uri">https://doi.org/10.5281/zenodo.7232109</a></p>
</div>
</div>
</div>
<p>I recently came across <a href="https://github.com/sokrypton/ColabFold">ColabFold</a> <span class="citation" data-cites="mirdita2022">(Mirdita et al. 2022)</span>, a slimmer and faster implementation of AlphaFold2 <span class="citation" data-cites="jumper2021">(Jumper et al. 2021)</span> (the famous protein structure prediction software from <a href="https://www.deepmind.com/research/highlighted-research/alphafold">DeepMind</a>) implemented on Google Colab in the form of a Jupyter notebook, giving it an easy-to-use web server-like interface. I found this idea intriguing as it removes the overhead of maintaining a webserver while providing a web-based graphical user interface.</p>
<p>Google Colab is a free (with options for pro subscriptions) Jupyter notebook environment for Python (R indirectly) provided by Google that runs on unoccupied Google servers. This free resource also includes access to <a href="https://en.wikipedia.org/wiki/Graphics_processing_unit">GPU</a> and <a href="https://en.wikipedia.org/wiki/Tensor_Processing_Unit">TPU</a> making it attractive to various machine learning and data science tasks. For the most part, Google Colab is utilized in machine learning and data science education. However, following the example of ColabFold and my implementation of <a href="https://github.com/rohitfarmer/ColabHDStIM">ColabHDStIM</a>, I want to make a case that it can also be used for providing an easy-to-use interface or live demo for scientific software without maintaining the complex infrastructure of a web server.</p>
<p>Coming from a bioinformatics/computational biology background, I know there is a craze for developing web servers worldwide. However, although many web servers are created yearly, many groups, especially in developing countries, lack the resources to build one. On the flip side, many of these initially well-funded web servers are either of low quality, are not kept updated, or go offline soon after the publication, thus squandering the resources <span class="citation" data-cites="veretnik2008 schultheiss2011 kern2020">(Veretnik, Fink, and Bourne 2008; Schultheiss et al. 2011; Kern, Fehlmann, and Keller 2020)</span>. Therefore, there is a need for an alternative where scientists can distribute their software in an easy-to-use interface like interactive notebooks. Even if the notebook environments are limited in executing production-scale software, they can still be utilized to provide a live demo on a minimal dataset. In my opinion, it is better than the vignettes accompanying software.&nbsp;</p>
<p>Below are some pros and cons of using Google Colab.</p>
<p><strong>Pros</strong></p>
<ul>
<li>Easy to implement</li>
<li>Free hardware resources from Google, including GPU and TPU</li>
<li>Option to buy more resources from Google as per need</li>
<li>While hosted on Google’s server, the same notebook can be executed using a local runtime to take advantage of local hardware resources.</li>
<li>Forkable and hackable if the original maintainer stops the development.</li>
</ul>
<p><strong>Cons</strong></p>
<ul>
<li>Free hardware resources can be limiting</li>
<li>Uploading and downloading data to a Colab is slow and require a workaround</li>
<li>All the instances are transient; therefore, on every restart, all the required software is re-installed, which takes time.</li>
<li>Colab notebooks are meant to run interactively; therefore, maintaining a long background session is hard or impossible.</li>
<li>Colab primarily supports Python and requires workarounds to support other languages.</li>
</ul>
<p><strong>Learn more about Google Colab</strong></p>
<ol type="1">
<li><a href="https://research.google.com/colaboratory/faq.html">Google Colab frequently asked questions</a></li>
<li><a href="https://colab.research.google.com/">Welcome to Colab!</a></li>
<li><a href="https://www.youtube.com/watch?v=oCngVVBSsmA">Practical introduction to Google Colab for data science (YouTube video)</a></li>
</ol>
<p><strong>References</strong></p>
<div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-jumper2021" class="csl-entry">
Jumper, John, Richard Evans, Alexander Pritzel, Tim Green, Michael Figurnov, Olaf Ronneberger, Kathryn Tunyasuvunakool, et al. 2021. <span>“Highly Accurate Protein Structure Prediction with AlphaFold.”</span> <em>Nature</em> 596 (7873): 583–89. <a href="https://doi.org/10.1038/s41586-021-03819-2">https://doi.org/10.1038/s41586-021-03819-2</a>.
</div>
<div id="ref-kern2020" class="csl-entry">
Kern, Fabian, Tobias Fehlmann, and Andreas Keller. 2020. <span>“On the Lifetime of Bioinformatics Web Services.”</span> <em>Nucleic Acids Research</em> 48 (22): 12523–33. <a href="https://doi.org/10.1093/nar/gkaa1125">https://doi.org/10.1093/nar/gkaa1125</a>.
</div>
<div id="ref-mirdita2022" class="csl-entry">
Mirdita, Milot, Konstantin Schütze, Yoshitaka Moriwaki, Lim Heo, Sergey Ovchinnikov, and Martin Steinegger. 2022. <span>“ColabFold: Making Protein Folding Accessible to All.”</span> <em>Nature Methods</em> 19 (6): 679–82. <a href="https://doi.org/10.1038/s41592-022-01488-1">https://doi.org/10.1038/s41592-022-01488-1</a>.
</div>
<div id="ref-schultheiss2011" class="csl-entry">
Schultheiss, Sebastian J., Marc-Christian Münch, Gergana D. Andreeva, and Gunnar Rätsch. 2011. <span>“Persistence and Availability of Web Services in Computational Biology.”</span> Edited by Dongxiao Zhu. <em>PLoS ONE</em> 6 (9): e24914. <a href="https://doi.org/10.1371/journal.pone.0024914">https://doi.org/10.1371/journal.pone.0024914</a>.
</div>
<div id="ref-veretnik2008" class="csl-entry">
Veretnik, Stella, J. Lynn Fink, and Philip E. Bourne. 2008. <span>“Computational Biology Resources Lack Persistence and Usability.”</span> Edited by Barbara Bryant. <em>PLoS Computational Biology</em> 4 (7): e1000136. <a href="https://doi.org/10.1371/journal.pcbi.1000136">https://doi.org/10.1371/journal.pcbi.1000136</a>.
</div>
</div>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@misc{farmer2022,
  author = {Rohit Farmer},
  publisher = {Zenodo},
  title = {A Case for Using {Google} {Colab} Notebooks as an Alternative
    to Web Servers for Scientific Software},
  date = {2022-10-17},
  url = {https://doi.org/10.5281/zenodo.7232109},
  doi = {10.5281/zenodo.7232109},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-farmer2022" class="csl-entry quarto-appendix-citeas">
Rohit Farmer. 2022. <span>“A Case for Using Google Colab Notebooks as an
Alternative to Web Servers for Scientific Software.”</span> Zenodo. <a href="https://doi.org/10.5281/zenodo.7232109">https://doi.org/10.5281/zenodo.7232109</a>.
</div></div></section></div> ]]></description>
  <category>Google Colab</category>
  <category>Jupyter Notebooks</category>
  <category>Scientific Software</category>
  <guid>https://www.dataalltheway.com/posts/006-google-colab-for-scientific-software/index.html</guid>
  <pubDate>Mon, 17 Oct 2022 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Classify the bitter or sweet taste of compounds</title>
  <dc:creator>Rohit Farmer</dc:creator>
  <link>https://www.dataalltheway.com/posts/005-classify-the-bitter-or-sweet-taste-of-compounds/index.html</link>
  <description><![CDATA[ 



<div class="callout-note callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Original Post
</div>
</div>
<div class="callout-body-container callout-body">
<p>This post is an identical copy of “About Dataset” at Kaggle: <a href="https://www.kaggle.com/dsv/4234193" class="uri">https://www.kaggle.com/dsv/4234193</a></p>
</div>
</div>
<section id="context" class="level1">
<h1>Context</h1>
<p>Throughout human evolution, we have been drawn toward sweet-tasting foods and averted from bitter tastes - sweet is good or desirable, bitter is undesirable, ear wax or medicinal. Therefore, a better understanding of molecular features that determine the bitter-sweet taste of substances is crucial for identifying natural and synthetic compounds for various purposes.</p>
</section>
<section id="sources" class="level1">
<h1>Sources</h1>
<p><a href="https://www.kaggle.com/dsv/4234193">This dataset</a> is adapted from <a href="https://github.com/cosylabiiit/bittersweet" class="uri">https://github.com/cosylabiiit/bittersweet</a>, <a href="https://www.nature.com/articles/s41598-019-43664-y" class="uri">https://www.nature.com/articles/s41598-019-43664-y</a>. In chemoinformatics, molecules are often represented as compact <a href="https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system">SMILES</a> strings. In this dataset, SMILES structures, along with their names and targets (bitter, sweet, tasteless, and non-bitter), were obtained from the original study. Subsequently, SMILES were converted into canonical SMILES using RDKit, and the features (molecular descriptors, both 2D and 3D) were calculated using <a href="https://github.com/mordred-descriptor/mordred">Mordred</a>. Secondly, tasteless and non-bitter categories were merged into a single category of non-bitter-sweet. Finally, since many of the compounds were missing names, IUPAC names were fetched using <a href="https://pubchempy.readthedocs.io/en/latest/">PubChemPy</a> for all the compounds, and for still missing names, a generic compound + incrementor name was assigned.</p>
</section>
<section id="inspiration" class="level1">
<h1>Inspiration</h1>
<p>This is a classification dataset with the first three columns carrying names, SMILES, and canonical SMILES. Any of these columns can be used to refer to a molecule. The fourth column is the target (taste category). And all numeric features are from the 5th column until the end of the file. Many features have cells with string annotations due to errors produced by Mordred. Therefore, the following data science techniques can be learned while working on this dataset:</p>
<ol type="1">
<li>Data cleanup</li>
<li>Features selection (since the number of features is quite large in proportion to the data points)</li>
<li>Feature scaling/transformation/normalization</li>
<li>Dimensionality reduction</li>
<li>Binomial classification (bitter vs.&nbsp;sweet) - utilize non-bitter-sweet as a negative class.</li>
<li>Multinomial classification (bitter vs.&nbsp;sweet vs.&nbsp;non-bitter-sweet)</li>
<li>Since SMILES can be converted into molecular graphs, graph-based modeling should also be possible.</li>
</ol>
</section>
<section id="initial-data-preparation" class="level1">
<h1>Initial data preparation</h1>
<p>A copy of the original dataset and the scripts and notebooks used to convert SMILES to canonical SMILES, generate features, fetch names, and export the final TSV file for Kaggle is loosely maintained at <a href="https://github.com/rohitfarmer/bittersweet" class="uri">https://github.com/rohitfarmer/bittersweet</a>.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@dataset{farmer2022,
  author = {Rohit Farmer},
  publisher = {Kaggle},
  title = {Classify the Bitter or Sweet Taste of Compounds},
  date = {2022-10-15},
  url = {https://www.kaggle.com/dsv/4234193},
  doi = {10.34740/KAGGLE/DSV/4234193},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-farmer2022" class="csl-entry quarto-appendix-citeas">
Rohit Farmer. 2022. <span>“Classify the Bitter or Sweet Taste of
Compounds.”</span> Kaggle. <a href="https://doi.org/10.34740/KAGGLE/DSV/4234193">https://doi.org/10.34740/KAGGLE/DSV/4234193</a>.
</div></div></section></div> ]]></description>
  <category>Datasets</category>
  <category>Kaggle</category>
  <category>Classification</category>
  <guid>https://www.dataalltheway.com/posts/005-classify-the-bitter-or-sweet-taste-of-compounds/index.html</guid>
  <pubDate>Sat, 15 Oct 2022 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How to use Neovim or VIM editor as an IDE for R</title>
  <dc:creator>Rohit Farmer</dc:creator>
  <link>https://www.dataalltheway.com/posts/004-how-to-use-neovim-or-vim-editor-as-an-ide-for-r/index.html</link>
  <description><![CDATA[ 



<div class="quarto-video ratio ratio-16x9"><iframe src="https://www.youtube.com/embed/nm45WagtV3w" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p><em>Note: This tutorial is written for Linux based systems.</em></p>
<section id="requirements" class="level2">
<h2 class="anchored" data-anchor-id="requirements">Requirements</h2>
<section id="r-3.0.0" class="level3">
<h3 class="anchored" data-anchor-id="r-3.0.0">R &gt;= 3.0.0</h3>
<p>To install the latest version of R please follow the download and install instructions at <a href="https://cloud.r-project.org/" class="uri">https://cloud.r-project.org/</a></p>
</section>
<section id="neovim-0.2.0" class="level3">
<h3 class="anchored" data-anchor-id="neovim-0.2.0">Neovim &gt;= 0.2.0</h3>
<p><a href="https://neovim.io/">Neovim</a> (nvim) is the continuation and extension of Vim editor with the aim to keep the good parts of Vim and add more features. In this tutorial I will be using Neovim (nvim), however, most of the steps are equally applicable to Vim also. Please follow download and installation instructions on nvim’s GitHub wiki <a href="https://github.com/neovim/neovim/wiki/Installing-Neovim" class="uri">https://github.com/neovim/neovim/wiki/Installing-Neovim</a>.</p>
<p><strong>OR</strong></p>
</section>
<section id="vim-8.1" class="level3">
<h3 class="anchored" data-anchor-id="vim-8.1">Vim &gt;= 8.1</h3>
<p><a href="https://github.com/vim/vim">Vim</a> usually comes installed in most of the Linux based operating system. However, it may not be the latest one. Therefore, to install the latest version please download and install it from Vim’s GitHub repository as mentioned below or a method that is more confortable to you.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;">git</span> clone https://github.com/vim/vim.git</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">make</span> <span class="at" style="color: #657422;">-C</span> vim/</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">sudo</span> make install <span class="at" style="color: #657422;">-C</span> vim/</span></code></pre></div>
</section>
<section id="plugin-manager" class="level3">
<h3 class="anchored" data-anchor-id="plugin-manager">Plugin Manager</h3>
<p>There are more than one plugin manager’s available for Vim that can be used to install the required plugins. In this tutorial I will be using <a href="https://github.com/junegunn/vim-plug">vim-plug</a> pluggin manager.</p>
</section>
<section id="plugins" class="level3">
<h3 class="anchored" data-anchor-id="plugins">Plugins</h3>
<p>In the end below are the plugins that we would need to convert Vim editor into a fully functional IDE for R.</p>
<ol type="1">
<li>Nvim-R: <a href="https://github.com/jalvesaq/Nvim-R" class="uri">https://github.com/jalvesaq/Nvim-R</a>
<ul>
<li>Nvim-R is the main plugin that will add the functionality to execute R code from within the Vim editor.</li>
</ul></li>
<li>Ncm-R: <a href="https://github.com/gaalcaras/ncm-R" class="uri">https://github.com/gaalcaras/ncm-R</a>
<ul>
<li>Ncm-R adds synchronous auto completion features for R.</li>
<li>It is based on <a href="https://github.com/ncm2/ncm2">ncm2</a> and <a href="https://github.com/roxma/nvim-yarp">nvim-yarp</a> plugins.</li>
</ul></li>
<li>Nerd Tree: <a href="https://github.com/preservim/nerdtree" class="uri">https://github.com/preservim/nerdtree</a>
<ul>
<li>Nerd Tree will be used to toggle file explorer in the side panel.</li>
</ul></li>
<li>DelimitMate: <a href="https://github.com/Raimondi/delimitMate" class="uri">https://github.com/Raimondi/delimitMate</a>
<ul>
<li>This plug-in provides automatic closing of quotes, parenthesis, brackets, etc.</li>
</ul></li>
<li>Vim-monokai-tasty: <a href="https://github.com/patstockwell/vim-monokai-tasty" class="uri">https://github.com/patstockwell/vim-monokai-tasty</a>
<ul>
<li>Monokai color scheme inspired by Sublime Text’s interpretation of monokai.</li>
</ul></li>
<li>Lightline.vim: <a href="https://github.com/itchyny/lightline.vim" class="uri">https://github.com/itchyny/lightline.vim</a>
<ul>
<li>Lineline.vim adds asthetic enhancements to Vim’s statusline/tabline.</li>
</ul></li>
</ol>
</section>
</section>
<section id="procedure" class="level2">
<h2 class="anchored" data-anchor-id="procedure">Procedure</h2>
<ol type="1">
<li>Make sure that you have <code>R &gt;=3.0.0</code> installed.</li>
<li>Make sure that you have <code>Neovim &gt;= 0.2.0</code> installed.</li>
<li>Install the <code>vim-plug</code> plugin manager.</li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">curl</span> <span class="at" style="color: #657422;">-fLo</span> ~/.local/share/nvim/site/autoload/plug.vim <span class="at" style="color: #657422;">--create-dirs</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb2-2">    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span></code></pre></div>
<ol start="4" type="1">
<li>Install the required plugins.</li>
</ol>
<p>First, create an <code>init.vim</code> file in <code>~/.config/nvim</code> folder (create the folder if it doesn’t exist). This file is equivalent to a <code>.vimrc</code> file in the traditional Vim environment. To <code>init.vim</code> file start adding:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb3-1">" Specify a directory for plugins</span>
<span id="cb3-2">" - Avoid using standard Vim directory names like 'plugin'</span>
<span id="cb3-3">call plug#begin('~/.vim/plugged')</span>
<span id="cb3-4"></span>
<span id="cb3-5">" List of plugins.</span>
<span id="cb3-6">" Make sure you use single quotes</span>
<span id="cb3-7"></span>
<span id="cb3-8">" Shorthand notation</span>
<span id="cb3-9">Plug 'jalvesaq/Nvim-R'</span>
<span id="cb3-10">Plug 'ncm2/ncm2'</span>
<span id="cb3-11">Plug 'roxma/nvim-yarp'</span>
<span id="cb3-12">Plug 'gaalcaras/ncm-R'</span>
<span id="cb3-13">Plug 'preservim/nerdtree'</span>
<span id="cb3-14">Plug 'Raimondi/delimitMate'</span>
<span id="cb3-15">Plug 'patstockwell/vim-monokai-tasty'</span>
<span id="cb3-16">Plug 'itchyny/lightline.vim'</span>
<span id="cb3-17"></span>
<span id="cb3-18">" Initialize plugin system</span>
<span id="cb3-19">call plug#end()</span></code></pre></div>
<ol start="5" type="1">
<li>Update and add more features to the <code>init.vim</code> file.</li>
</ol>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb4-1">" Set a Local Leader</span>
<span id="cb4-2"></span>
<span id="cb4-3">" With a map leader it's possible to do extra key combinations</span>
<span id="cb4-4">" like &lt;leader&gt;w saves the current file</span>
<span id="cb4-5">let mapleader = ","</span>
<span id="cb4-6">let g:mapleader = ","</span>
<span id="cb4-7"></span>
<span id="cb4-8"></span>
<span id="cb4-9">" Plugin Related Settings</span>
<span id="cb4-10"></span>
<span id="cb4-11">" NCM2</span>
<span id="cb4-12">autocmd BufEnter * call ncm2#enable_for_buffer()    " To enable ncm2 for all buffers.</span>
<span id="cb4-13">set completeopt=noinsert,menuone,noselect           " :help Ncm2PopupOpen for more</span>
<span id="cb4-14">                                                    " information.</span>
<span id="cb4-15"></span>
<span id="cb4-16">" NERD Tree</span>
<span id="cb4-17">map &lt;leader&gt;nn :NERDTreeToggle&lt;CR&gt;                  " Toggle NERD tree.</span>
<span id="cb4-18"></span>
<span id="cb4-19">" Monokai-tasty</span>
<span id="cb4-20">let g:vim_monokai_tasty_italic = 1                  " Allow italics.</span>
<span id="cb4-21">colorscheme vim-monokai-tasty                       " Enable monokai theme.</span>
<span id="cb4-22"></span>
<span id="cb4-23">" LightLine.vim </span>
<span id="cb4-24">set laststatus=2              " To tell Vim we want to see the statusline.</span>
<span id="cb4-25">let g:lightline = {</span>
<span id="cb4-26">   \ 'colorscheme':'monokai_tasty',</span>
<span id="cb4-27">   \ }</span>
<span id="cb4-28"></span>
<span id="cb4-29"></span>
<span id="cb4-30">" General NVIM/VIM Settings</span>
<span id="cb4-31"></span>
<span id="cb4-32">" Mouse Integration</span>
<span id="cb4-33">set mouse=i                   " Enable mouse support in insert mode.</span>
<span id="cb4-34"></span>
<span id="cb4-35">" Tabs &amp; Navigation</span>
<span id="cb4-36">map &lt;leader&gt;nt :tabnew&lt;cr&gt;    " To create a new tab.</span>
<span id="cb4-37">map &lt;leader&gt;to :tabonly&lt;cr&gt;     " To close all other tabs (show only the current tab).</span>
<span id="cb4-38">map &lt;leader&gt;tc :tabclose&lt;cr&gt;    " To close the current tab.</span>
<span id="cb4-39">map &lt;leader&gt;tm :tabmove&lt;cr&gt;     " To move the current tab to next position.</span>
<span id="cb4-40">map &lt;leader&gt;tn :tabn&lt;cr&gt;        " To swtich to next tab.</span>
<span id="cb4-41">map &lt;leader&gt;tp :tabp&lt;cr&gt;        " To switch to previous tab.</span>
<span id="cb4-42"></span>
<span id="cb4-43"></span>
<span id="cb4-44">" Line Numbers &amp; Indentation</span>
<span id="cb4-45">set backspace=indent,eol,start  " To make backscape work in all conditions.</span>
<span id="cb4-46">set ma                          " To set mark a at current cursor location.</span>
<span id="cb4-47">set number                      " To switch the line numbers on.</span>
<span id="cb4-48">set expandtab                   " To enter spaces when tab is pressed.</span>
<span id="cb4-49">set smarttab                    " To use smart tabs.</span>
<span id="cb4-50">set autoindent                  " To copy indentation from current line </span>
<span id="cb4-51">                                " when starting a new line.</span>
<span id="cb4-52">set si                          " To switch on smart indentation.</span>
<span id="cb4-53"></span>
<span id="cb4-54"></span>
<span id="cb4-55">" Search</span>
<span id="cb4-56">set ignorecase                  " To ignore case when searching.</span>
<span id="cb4-57">set smartcase                   " When searching try to be smart about cases.</span>
<span id="cb4-58">set hlsearch                    " To highlight search results.</span>
<span id="cb4-59">set incsearch                   " To make search act like search in modern browsers.</span>
<span id="cb4-60">set magic                       " For regular expressions turn magic on.</span>
<span id="cb4-61"></span>
<span id="cb4-62"></span>
<span id="cb4-63">" Brackets</span>
<span id="cb4-64">set showmatch                   " To show matching brackets when text indicator </span>
<span id="cb4-65">                                " is over them.</span>
<span id="cb4-66">set mat=2                       " How many tenths of a second to blink </span>
<span id="cb4-67">                                " when matching brackets.</span>
<span id="cb4-68"></span>
<span id="cb4-69"></span>
<span id="cb4-70">" Errors</span>
<span id="cb4-71">set noerrorbells                " No annoying sound on errors.</span>
<span id="cb4-72"></span>
<span id="cb4-73"></span>
<span id="cb4-74">" Color &amp; Fonts</span>
<span id="cb4-75">syntax enable                   " Enable syntax highlighting.</span>
<span id="cb4-76">set encoding=utf8                " Set utf8 as standard encoding and </span>
<span id="cb4-77">                                 " en_US as the standard language.</span>
<span id="cb4-78"></span>
<span id="cb4-79">" Enable 256 colors palette in Gnome Terminal.</span>
<span id="cb4-80">if $COLORTERM == 'gnome-terminal'</span>
<span id="cb4-81">    set t_Co=256</span>
<span id="cb4-82">endif</span>
<span id="cb4-83"></span>
<span id="cb4-84">try</span>
<span id="cb4-85">    colorscheme desert</span>
<span id="cb4-86">catch</span>
<span id="cb4-87">endtry</span>
<span id="cb4-88"></span>
<span id="cb4-89"></span>
<span id="cb4-90">" Files &amp; Backup</span>
<span id="cb4-91">set nobackup                     " Turn off backup.</span>
<span id="cb4-92">set nowb                         " Don't backup before overwriting a file.</span>
<span id="cb4-93">set noswapfile                   " Don't create a swap file.</span>
<span id="cb4-94">set ffs=unix,dos,mac             " Use Unix as the standard file type.</span>
<span id="cb4-95"></span>
<span id="cb4-96"></span>
<span id="cb4-97">" Return to last edit position when opening files</span>
<span id="cb4-98">au BufReadPost * if line("'\"") &gt; 1 &amp;&amp; line("'\"") &lt;= line("$") | exe "normal! g'\"" | endif</span></code></pre></div>
</section>
<section id="frequently-used-keyboard-shortcutscommands" class="level2">
<h2 class="anchored" data-anchor-id="frequently-used-keyboard-shortcutscommands">Frequently Used Keyboard Shortcuts/Commands</h2>
<p>Note: The commands below are according to the <code>init.vim</code> settings mentioned in this Gist.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb5-1"># Nvim-R</span>
<span id="cb5-2">\rf               " Connect to R console.</span>
<span id="cb5-3">\rq               " Quit R console.</span>
<span id="cb5-4">\ro               " Open object bowser.</span>
<span id="cb5-5">\d                " Execute current line of code and move to the next line.</span>
<span id="cb5-6">\ss               " Execute a block of selected code.</span>
<span id="cb5-7">\aa               " Execute the entire script. This is equivalent to source().</span>
<span id="cb5-8">\xx               " Toggle comment in an R script.</span>
<span id="cb5-9"></span>
<span id="cb5-10"># NERDTree</span>
<span id="cb5-11">,nn               " Toggle NERDTree.</span></code></pre></div>
</section>
<section id="example-code" class="level2">
<h2 class="anchored" data-anchor-id="example-code">Example Code</h2>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;"># \rf               " Connect to R console.</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;"># \rq               " Quit R console.</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;"># \ro               " Open object bowser.</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;"># \d \ss \aa        " Execution modes. </span></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;"># ?help</span></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;"># ,nn               " NERDTree.</span></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;"># ,nt, tp, tn       " Tab navigation.</span></span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="fu" style="color: #4758AB;">theme_set</span>(<span class="fu" style="color: #4758AB;">theme_bw</span>())</span>
<span id="cb6-11"><span class="fu" style="color: #4758AB;">data</span>(<span class="st" style="color: #20794D;">"midwest"</span>, <span class="at" style="color: #657422;">package =</span> <span class="st" style="color: #20794D;">"ggplot2"</span>)</span>
<span id="cb6-12"></span>
<span id="cb6-13">gg  <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ggplot</span>(midwest, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x=</span>area, <span class="at" style="color: #657422;">y =</span> poptotal)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-14">        <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">col =</span> state, <span class="at" style="color: #657422;">size =</span> popdensity)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-15">        <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"loess"</span>, <span class="at" style="color: #657422;">se =</span> F) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-16">        <span class="fu" style="color: #4758AB;">xlim</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="fl" style="color: #AD0000;">0.1</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-17">        <span class="fu" style="color: #4758AB;">ylim</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">500000</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-18">        <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Area Vs Population"</span>,</span>
<span id="cb6-19">             <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Population"</span>,</span>
<span id="cb6-20">             <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Area"</span>,</span>
<span id="cb6-21">             <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Scatterplot"</span>,</span>
<span id="cb6-22">             <span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Source: midwest"</span>)</span>
<span id="cb6-23"></span>
<span id="cb6-24"><span class="fu" style="color: #4758AB;">plot</span>(gg) <span class="co" style="color: #5E5E5E;"># Opens an external window with the plot.</span></span>
<span id="cb6-25"></span>
<span id="cb6-26">midwest<span class="sc" style="color: #5E5E5E;">$</span>county <span class="co" style="color: #5E5E5E;"># To show synchronous auto completion. </span></span>
<span id="cb6-27"></span>
<span id="cb6-28"><span class="fu" style="color: #4758AB;">View</span>(midwest) <span class="co" style="color: #5E5E5E;"># Opens an external window to display a portion of the tibble.</span></span></code></pre></div>
</section>
<section id="add-colour-etc.-to-vim-in-a-screen-session-optional" class="level2">
<h2 class="anchored" data-anchor-id="add-colour-etc.-to-vim-in-a-screen-session-optional">Add Colour etc. to VIM in a Screen Session (optional)</h2>
<p>Add these lines to <code>~/.screenrc</code> file.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb7-1"># Use 256 colors</span>
<span id="cb7-2">attrcolor b ".I"    # allow bold colors - necessary for some reason</span>
<span id="cb7-3">termcapinfo xterm 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm'   # tell screen how to set colors. AB = background, AF=foreground</span>
<span id="cb7-4">defbce on    # use current bg color for erased chars]]'</span>
<span id="cb7-5"></span>
<span id="cb7-6"># Informative statusbar</span>
<span id="cb7-7">hardstatus off</span>
<span id="cb7-8">hardstatus alwayslastline</span>
<span id="cb7-9">hardstatus string '%{= kG}[ %{G}%H %{g}][%= %{= kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B} %m-%d %{W} %c %{g}]'</span>
<span id="cb7-10"></span>
<span id="cb7-11"># Use X scrolling mechanism</span>
<span id="cb7-12">termcapinfo xterm* ti@:te@</span>
<span id="cb7-13"></span>
<span id="cb7-14"># Fix for residual editor text</span>
<span id="cb7-15">altscreen on</span></code></pre></div>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{farmer2022,
  author = {Rohit Farmer},
  title = {How to Use {Neovim} or {VIM} Editor as an {IDE} for {R}},
  date = {2022-10-15},
  url = {https://www.dataalltheway.com/posts/004-how-to-use-neovim-or-vim-editor-as-an-ide-for-r},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-farmer2022" class="csl-entry quarto-appendix-citeas">
Rohit Farmer. 2022. <span>“How to Use Neovim or VIM Editor as an IDE for
R.”</span> October 15, 2022. <a href="https://www.dataalltheway.com/posts/004-how-to-use-neovim-or-vim-editor-as-an-ide-for-r">https://www.dataalltheway.com/posts/004-how-to-use-neovim-or-vim-editor-as-an-ide-for-r</a>.
</div></div></section></div> ]]></description>
  <category>How To</category>
  <category>IDE</category>
  <category>R</category>
  <guid>https://www.dataalltheway.com/posts/004-how-to-use-neovim-or-vim-editor-as-an-ide-for-r/index.html</guid>
  <pubDate>Sat, 15 Oct 2022 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How to download a shared file from Google Drive in R</title>
  <dc:creator>Rohit Farmer</dc:creator>
  <link>https://www.dataalltheway.com/posts/003-how-to-download-a-shared-file-from-googledrive-in-r/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>To download a shared file with “anyone with the link” access rights from Google Drive in R, we can utilize the <code>googledrive</code> library from the <code>tidyverse</code> package. The method described here will utilize the file ID copied from the shared link. Typically <code>googledrive</code> package is used to work with a Google Drive of an authenticated user. However, since we are downloading a publicly shared file in this tutorial, we will work without user authentication. So, please follow the steps below.</p>
<section id="step-1-copy-the-file-id-from-the-share-link." class="level2">
<h2 class="anchored" data-anchor-id="step-1-copy-the-file-id-from-the-share-link.">Step 1: Copy the file ID from the share link.</h2>
<p>Below is a share link from my Google Drive pointing to an R data frame.</p>
<p><code>https://drive.google.com/file/d/1vj607etanUVYzVFj_HXkznHTd0Ltv_Y4/view?usp=sharing</code></p>
<p>This string <code>1vj607etanUVYzVFj_HXkznHTd0Ltv_Y4</code> is the file ID that we will use to download.</p>
</section>
<section id="step-2-download-the-file-using-an-authenticated-connection." class="level2">
<h2 class="anchored" data-anchor-id="step-2-download-the-file-using-an-authenticated-connection.">Step 2: Download the file using an authenticated connection.</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="cf" style="color: #003B4F;">if</span>(<span class="sc" style="color: #5E5E5E;">!</span><span class="fu" style="color: #4758AB;">require</span>(googledrive)) <span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"googledrive"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(googledrive)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">drive_deauth</span>()</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">drive_user</span>()</span>
<span id="cb1-6">public_file <span class="ot" style="color: #003B4F;">&lt;-</span>  <span class="fu" style="color: #4758AB;">drive_get</span>(<span class="fu" style="color: #4758AB;">as_id</span>(<span class="st" style="color: #20794D;">"1vj607etanUVYzVFj_HXkznHTd0Ltv_Y4"</span>))</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;">drive_download</span>(public_file, <span class="at" style="color: #657422;">overwrite =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
</div>
<pre><code>File downloaded:
• hdstim-example-data.rds &lt;id: 1vj607etanUVYzVFj_HXkznHTd0Ltv_Y4&gt;
Saved locally as:
• hdstim-example-data.rds</code></pre>
<p>The downloaded data frame.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(DT)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">datatable</span>(<span class="fu" style="color: #4758AB;">head</span>(<span class="fu" style="color: #4758AB;">readRDS</span>(<span class="st" style="color: #20794D;">"hdstim-example-data.rds"</span>)))</span></code></pre></div>
<div class="cell-output-display">

<div id="htmlwidget-74690091642b17fcb953" style="width:100%;height:auto;" class="datatables html-widget"></div>
<script type="application/json" data-for="htmlwidget-74690091642b17fcb953">{"x":{"filter":"none","vertical":false,"data":[["1","2","3","4","5","6"],[79,70,69,69,79,70],["CHI-011_1_2_A","CHI-011_1_1_A","CHI-011_3_10_A","CHI-011_3_10_A","CHI-011_4_12_A","CHI-011_2_6_A"],["CHI","CHI","CHI","CHI","CHI","CHI"],["CHI-011","CHI-011","CHI-011","CHI-011","CHI-011","CHI-011"],["A","A","A","A","A","A"],["CD11c CD14 CD38","CD11c CD14 CD38","CD11c CD14 CD38","CD11c CD14 CD38","CD11c CD14 CD38","CD11c CD14 CD38"],[3.11045985421461,3.756624119687,2.91172235059654,2.91947229958479,2.86243065529249,3.55471947848649],[2.60148450148647,1.96048766745817,1.31056430339826,1.37664270971998,1.73146179281805,2.64596916043389],[0.0511450206524779,0,0,0,0,0.934134878137762],[0.715850432612773,1.51468188723134,0,0,0.669274125232149,2.00748803888894],[1.60813176535096,0.891298069339495,0.663531561388978,0.613685355494012,2.00600285681816,1.08640795105961],[0,0,0,0.0400610034810615,0,0.144533362423892],[0,0,0,0,0,1.02057586670544],[0,0,0,0,0,0],[1.89939855959742,1.89740531143859,1.56083906701903,0,2.6283066495904,1.31582184236677],[0.253135536308388,1.18031265876627,1.14908639988457,0,0.60203455150163,1.31237331717289],[0.00369789949684945,1.42019379932966,0,0,0.292015878088941,0.747486538463715],[2.77331385345949,2.93516801403964,2.5077399892511,0,3.45956660590574,2.94476517349483],[0.818611130642736,0.288584492803405,0.41501690804668,0,0.397712653480103,0.717444487617541],[0.0708149411973731,0.559664627192441,0.711616749962613,1.66051446554381,2.30527976834,0.696557609808028],[0.0901644255041056,0.00285677018361897,0.511134647868454,0.0942685197420495,0.311234857890093,0],[1.72235731390904,2.03777931774125,1.2700510284353,0,1.65866992641687,2.49664130943363],[3.40026665462511,4.03268409388972,3.0127038002041,2.81608677589958,2.77497552695861,4.03455731237916],[3.60282931883905,3.72725122856332,3.23658833838627,1.92574695650221,3.37962998140363,3.41817022500882],[0,0,0.849363667161433,0,0,0.627406323811345],[2.47972008953098,3.05787535046539,1.32520533309986,1.3148934902373,1.46992626340919,2.11677383380288],[2.66213996356576,3.15170556980942,2.39801188953494,3.69386784866135,3.43625900221516,3.16288601115814],[0.0950055541308778,0,0,0,0.939884898249729,0],[2.31739627910986,0.988323168803844,1.73054962242106,2.50562978108194,0.494880999733125,0.756875322111951],[0.2970177575127,0.151289230433248,0.34647837052365,0,0,0],[0.193044912034295,1.14117991839873,0,0,0.0967478007059818,0.0639216025738452],[1.78627826892672,1.7993181167102,1.5975398105791,0.0230695735225738,0.443138595036129,1.42091355155696],[0.0423608708300761,0.0332365590723134,0,0,0,0.545795251581206],[2.76745995134643,3.87372990643494,1.91760799908439,0.511052067275238,3.3273032053323,4.55268565548227],[0,0,0,0.506312435220727,0,0.279160588121949],[0.328853956585871,0.269252468564148,0,0,0.605908439695913,0.286081128375009],[1659,1659,1659,1659,1659,1659]],"container":"<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>cluster_id<\/th>\n      <th>sample_id<\/th>\n      <th>condition<\/th>\n      <th>patient_id<\/th>\n      <th>stim_type<\/th>\n      <th>merging1<\/th>\n      <th>CD45<\/th>\n      <th>CD7<\/th>\n      <th>CD19<\/th>\n      <th>pPLCg2<\/th>\n      <th>CD4<\/th>\n      <th>IgD<\/th>\n      <th>CD20<\/th>\n      <th>CD25<\/th>\n      <th>pSTAT5<\/th>\n      <th>CD123<\/th>\n      <th>AKT<\/th>\n      <th>pSTAT1<\/th>\n      <th>CD27<\/th>\n      <th>pP38<\/th>\n      <th>CD24<\/th>\n      <th>pSTAT3<\/th>\n      <th>CD11c<\/th>\n      <th>CD14<\/th>\n      <th>CD56<\/th>\n      <th>IkBa<\/th>\n      <th>pCREB<\/th>\n      <th>CD16<\/th>\n      <th>CD38<\/th>\n      <th>CD8<\/th>\n      <th>CD45RA<\/th>\n      <th>CD3<\/th>\n      <th>pERK1_2<\/th>\n      <th>HLA_DR<\/th>\n      <th>pS6<\/th>\n      <th>CD127<\/th>\n      <th>ncount<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>","options":{"columnDefs":[{"className":"dt-right","targets":[1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]},{"orderable":false,"targets":0}],"order":[],"autoWidth":false,"orderClasses":false}},"evals":[],"jsHooks":[]}</script>
</div>
</div>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{farmer2022,
  author = {Rohit Farmer},
  title = {How to Download a Shared File from {Google} {Drive} in {R}},
  date = {2022-10-14},
  url = {https://www.dataalltheway.com/posts/003-how-to-download-a-shared-file-from-googledrive-in-r},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-farmer2022" class="csl-entry quarto-appendix-citeas">
Rohit Farmer. 2022. <span>“How to Download a Shared File from Google
Drive in R.”</span> October 14, 2022. <a href="https://www.dataalltheway.com/posts/003-how-to-download-a-shared-file-from-googledrive-in-r">https://www.dataalltheway.com/posts/003-how-to-download-a-shared-file-from-googledrive-in-r</a>.
</div></div></section></div> ]]></description>
  <category>How To</category>
  <guid>https://www.dataalltheway.com/posts/003-how-to-download-a-shared-file-from-googledrive-in-r/index.html</guid>
  <pubDate>Fri, 14 Oct 2022 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Tweets from heads of governments and states</title>
  <dc:creator>Rohit Farmer</dc:creator>
  <link>https://www.dataalltheway.com/posts/002-tweets-from-heads-of-governments-and-states/index.html</link>
  <description><![CDATA[ 



<p>Since October 2018, I have been maintaining a bot written in Python and running on a Raspberry Pi 3B+ that collects tweets from heads of governments (worldwide) followed by <a href="https://twitter.com/headoffice" class="uri">https://twitter.com/headoffice</a>. It was an excellent exercise learning Python, Twitter API, SQLite database, and using a Raspberry Pi for hobby projects. I have now released the data on Kaggle at <a href="https://doi.org/10.34740/KAGGLE/DSV/4208877" class="uri">https://doi.org/10.34740/KAGGLE/DSV/4208877</a> for the community to use.</p>
<p>The dataset contains an Excel workbook per year with data points on the rows and features on the columns. Features include the timestamp (UTC), language in which the tweet is written, user id, user name, tweet id, and tweet text. The first version includes the data from October 2018 until September 15, 2022. After that, future releases will be quarterly. It is a textual dataset and is primarily useful for analyses related to natural language processing.</p>
<p>In the Kaggle submission, I have also included a notebook (<a href="https://www.kaggle.com/code/rohitfarmer/dont-run-tweet-collection-and-preprocessing" class="uri">https://www.kaggle.com/code/rohitfarmer/dont-run-tweet-collection-and-preprocessing</a>) with the Python code that collected the tweets and the additional code that I used to pre-process the data before submission. After releasing the first data set, I updated the code and moved the bot from Python to R using the <code>rtweet</code> library instead of <code>tweepy</code>. I found <code>rtweet</code> to perform better, especially in filtering out duplicated tweets.</p>
<p>In the current setup (<a href="https://github.com/rohitfarmer/government-tweets" class="uri">https://github.com/rohitfarmer/government-tweets</a>) that is still running on my Raspberry Pi 3B+, the main bot script runs every fifteen minutes via <code>crontab</code> and fetches data that is more recent than the latest tweet collected in the previous run. The data is stored in an SQLite database which is backed up to MEGA cloud storage via Rclone once every midnight ET.</p>
<p>I enjoyed the process of creating the bot and being able to run it for a couple of years, and I hope I will soon find some time to look into the data and fetch some exciting insights. But, until then, the data is available to the data science community to utilize as they please. So, please open a discussion on the Kaggle page for questions, comments, or collaborations.</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@dataset{farmer2022,
  author = {Rohit Farmer},
  publisher = {Kaggle},
  title = {Tweets from Heads of Governments and States},
  date = {2022-10-05},
  url = {https://www.kaggle.com/dsv/4208877},
  doi = {10.34740/KAGGLE/DSV/4208877},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-farmer2022" class="csl-entry quarto-appendix-citeas">
Rohit Farmer. 2022. <span>“Tweets from Heads of Governments and
States.”</span> Kaggle. <a href="https://doi.org/10.34740/KAGGLE/DSV/4208877">https://doi.org/10.34740/KAGGLE/DSV/4208877</a>.
</div></div></section></div> ]]></description>
  <category>Datasets</category>
  <category>Kaggle</category>
  <category>Twitter</category>
  <guid>https://www.dataalltheway.com/posts/002-tweets-from-heads-of-governments-and-states/index.html</guid>
  <pubDate>Wed, 05 Oct 2022 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Transformation</title>
  <dc:creator>Rohit Farmer</dc:creator>
  <link>https://www.dataalltheway.com/posts/001-data-transformation/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Data transformation is a process of performing a mathematical function on each data point used in a statistical or machine learning analysis to either satisfy the underlying assumptions of a statistical test (e.g., normal distribution for a t-test), help a machine-learning algorithm to converge faster and or make a visualization interpretable. In addition to statistical analyses and modeling, data transformation can also be helpful in data visualization, for example, performing a log transformation on a skewed data set to plot it in a relatively unskewed and visually appealing scatter plot. Most of the data transformation methods are invertible and original values of a data set can be recovered by implementing a counter mathematical function. In mathematical form it can be expressed as:</p>
<p><img src="https://latex.codecogs.com/png.latex?x'%20=%20f(x)"></p>
<p>Where <img src="https://latex.codecogs.com/png.latex?x"> is the original data, <img src="https://latex.codecogs.com/png.latex?x'"> is the transformed data, and <img src="https://latex.codecogs.com/png.latex?f(x)"> is a mathematical function performed on <img src="https://latex.codecogs.com/png.latex?x">.</p>
<p>In data science, data transformation is also sometimes combined with the data cleaning step. In addition to performing a mathematical function to the data points, they are also checked for quality, for example, checking for missing values. I will discuss data cleaning procedures elsewhere. Data transformation can be considered as an umbrella term for both data scaling and data normalization. They are frequently used interchangeably, sometimes referring to the same mathematical operation. Although data scaling and normalization are used to achieve a similar result, it is better to understand them as two different operations that are happening under the hood.</p>
<p>Although every data transformation method performs a mathematical operation on every data point (e.i. element wise), for some, this operation is not influenced if data points are either removed or added to the data set. Let’s consider a data set in the form of a two-dimensional data table with samples on the row and features on the column. Now take two methods to compare 1) log transformation 2) min-max scaling. In log transformation <img src="https://latex.codecogs.com/png.latex?log(x)">, a log is taken for every data point individually, and the result will not change if some rows or columns are dropped or added in our example data table. However, in min-max scaling</p>
<p><img src="https://latex.codecogs.com/png.latex?x'%20=%20x-min(x)/max(x)-min(x)"></p>
<p>that is performed feature-wise (columns); if the data point that was selected as a min or max in a previous transformation is removed, then re-doing the transformation will change the result. The removal of a data point may happen; for example, if the min or max value selected in the first iteration was an outlier or that a particular sample had multiple missing values, and therefore, it had to be removed, amongst others. Min-max scaling will also influence if more data points are added to our data set. It may bring a new min or max data point and hence will change the scaling. Therefore while selecting a data transformation method, it must be noted if data points are dropped in the subsequent analysis, then should you perform the transformation again as a result of data point loss or it will be indifferent.</p>
</section>
<section id="element-wise-data-transformation" class="level1">
<h1>Element Wise Data Transformation</h1>
<p>As mentioned in the general introduction above, element wise data transformation happens per element without utilizing any information from the rest of the elements in a feature (column) or in a sample (row). These methods are therefore immune to any change in the size of the data hence if some features or samples are removed after the transformation will not affect the subsequent analysis.</p>
<section id="log-transformation" class="level2">
<h2 class="anchored" data-anchor-id="log-transformation">Log Transformation</h2>
<p>In a <a href="https://en.wikipedia.org/wiki/Logarithm">log</a> transformation, logarithm is calculated for every value in the data set. Traditionally, log transformation is carried out to reduce the skewness of data or to bring data closer to a normal distribution. Usually the base to the log doesn’t matter unless it is a domain specific requirement. However, every feature of the data set should be transformed with the same base. Most of the programming languages have a core function to calculate the log of a number. In programming languages that support vector operation, for example, R, the same log function can be performed on both a single value or on all the values within a data frame, vector or matrix.</p>
<p>For example, let’s visualize the effect of log transformation on a synthetically generated dummy data. To generated figures Figure&nbsp;1 and Figure&nbsp;2, I have randomly sampled 10,000 positive real numbers from a skewed (positive and negative) normal distribution and performed a log transformation on every data point. The left sub-panel shows a histogram of the non-transformed data, and the right sub-panel shows a histogram of the log-transformed data. Although log transformation is known for reducing the skewness of the data and making the distribution more symmetric around the mean, it holds only for the positively skewed data. If the data are negatively skewed a log transformation will skew it further. In case of a negatively skewed data doing a power transformation may help to reduce the skewness (figure Figure&nbsp;3). Usually raising the data to a power of 2 has slight effect on the skewness; a higher number may be required. In addition to the visual inspection, we can also numerically quantify the skewness of the data; that is mentioned in the figure caption.</p>
<p><em>Log Transformation:</em> <img src="https://latex.codecogs.com/png.latex?x'%20=%20log(x)"></p>
<p><em>Power Transformation:</em> <img src="https://latex.codecogs.com/png.latex?x'%20=%20x%5En"></p>
<div id="load-packages-generate-random-data" class="cell" data-execution_count="1">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">from</span> scipy <span class="im" style="color: #00769E;">import</span> stats</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">from</span> scipy.stats <span class="im" style="color: #00769E;">import</span> skewnorm</span>
<span id="cb1-5"><span class="im" style="color: #00769E;">from</span> scipy.stats <span class="im" style="color: #00769E;">import</span> skew </span>
<span id="cb1-6"><span class="im" style="color: #00769E;">import</span> math</span>
<span id="cb1-7"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-8"><span class="im" style="color: #00769E;">import</span> matplotlib.ticker <span class="im" style="color: #00769E;">as</span> ticker</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;"># Generate random data points from a skewed normal distribution</span></span>
<span id="cb1-11">data_pos <span class="op" style="color: #5E5E5E;">=</span> np.<span class="bu" style="color: null;">round</span>(skewnorm.rvs(<span class="dv" style="color: #AD0000;">10</span>, size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">10000</span>, loc<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">1</span>, random_state <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">101</span>), decimals <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;">#print('Skewness for the positively (right) skewed data before transformation : ', round(skew(data_pos), 2)) </span></span>
<span id="cb1-13">data_neg <span class="op" style="color: #5E5E5E;">=</span> np.<span class="bu" style="color: null;">round</span>(skewnorm.rvs(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">10000</span>, loc<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">10</span>, random_state <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">101</span>), decimals <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;">#print('Skewness for the negatively (left) skewed data before transformation : ', round(skew(data_neg), 2)) </span></span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;"># Log transform the data</span></span>
<span id="cb1-17">log_data_pos <span class="op" style="color: #5E5E5E;">=</span> np.log(data_pos)</span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;">#print('Skewness for the positively skewed data after transformation : ', round(skew(log_data_pos), 2)) </span></span>
<span id="cb1-19">log_data_neg <span class="op" style="color: #5E5E5E;">=</span> np.log(data_neg)</span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;">#print('Skewness for the negatively skewed data after transformation : ', round(skew(log_data_neg), 2)) </span></span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="2">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">fig, axs <span class="op" style="color: #5E5E5E;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, sharey<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, tight_layout<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;"># We can set the number of bins with the *bins* keyword argument.</span></span>
<span id="cb2-4">axs[<span class="dv" style="color: #AD0000;">0</span>].hist(data_pos, bins<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">20</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb2-5">axs[<span class="dv" style="color: #AD0000;">0</span>].set_title(<span class="st" style="color: #20794D;">"Non-Transformed Data"</span>)</span>
<span id="cb2-6">axs[<span class="dv" style="color: #AD0000;">0</span>].set_xlabel(<span class="st" style="color: #20794D;">"Feature"</span>)</span>
<span id="cb2-7">axs[<span class="dv" style="color: #AD0000;">0</span>].set_ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb2-8">axs[<span class="dv" style="color: #AD0000;">1</span>].hist(log_data_pos, bins<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">20</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb2-9">axs[<span class="dv" style="color: #AD0000;">1</span>].set_title(<span class="st" style="color: #20794D;">"Log-Transformed Data"</span>)</span>
<span id="cb2-10">axs[<span class="dv" style="color: #AD0000;">1</span>].set_xlabel(<span class="st" style="color: #20794D;">"Feature"</span>)</span>
<span id="cb2-11">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="fig-log-hist-pos" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://www.dataalltheway.com/posts/001-data-transformation/index_files/figure-html/fig-log-hist-pos-output-1.png" width="662" height="470" class="figure-img"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Histogram of the positively skewed data and its log transformation. The skewness for the non-transformed data (left) is 0.9 and for the log-transformed data (right) is 0.2.</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell" data-execution_count="3">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">fig, axs <span class="op" style="color: #5E5E5E;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, sharey<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, tight_layout<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb3-2">axs[<span class="dv" style="color: #AD0000;">0</span>].hist(data_neg, bins <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb3-3">axs[<span class="dv" style="color: #AD0000;">0</span>].set_title(<span class="st" style="color: #20794D;">"Non-Transformed Data"</span>)</span>
<span id="cb3-4">axs[<span class="dv" style="color: #AD0000;">0</span>].set_xlabel(<span class="st" style="color: #20794D;">"Feature"</span>)</span>
<span id="cb3-5">axs[<span class="dv" style="color: #AD0000;">0</span>].set_ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb3-6">axs[<span class="dv" style="color: #AD0000;">1</span>].hist(log_data_neg, bins <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb3-7">axs[<span class="dv" style="color: #AD0000;">1</span>].set_title(<span class="st" style="color: #20794D;">"Log-Transformed Data"</span>)</span>
<span id="cb3-8">axs[<span class="dv" style="color: #AD0000;">1</span>].set_xlabel(<span class="st" style="color: #20794D;">"Feature"</span>)</span>
<span id="cb3-9">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="fig-log-hist-neg" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://www.dataalltheway.com/posts/001-data-transformation/index_files/figure-html/fig-log-hist-neg-output-1.png" width="662" height="470" class="figure-img"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Histogram of the negatively skewed data and its log transformation. The skewness for the non-transformed data (left) is -0.9 and for the log-transformed data (right) is -1.2.</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell" data-execution_count="4">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># Square data.</span></span>
<span id="cb4-2">pow_data_neg <span class="op" style="color: #5E5E5E;">=</span> np.power(data_neg, <span class="dv" style="color: #AD0000;">6</span>)</span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;">#print('Skewness for the negatively skewed data after transformation : ', round(skew(pow_data_neg), 2)) </span></span>
<span id="cb4-4">fig, axs <span class="op" style="color: #5E5E5E;">=</span> plt.subplots(ncols<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, sharey <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"all"</span>, tight_layout<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb4-5">axs[<span class="dv" style="color: #AD0000;">0</span>].hist(data_neg, bins <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb4-6">axs[<span class="dv" style="color: #AD0000;">0</span>].set_title(<span class="st" style="color: #20794D;">"Non-Transformed Data"</span>)</span>
<span id="cb4-7">axs[<span class="dv" style="color: #AD0000;">0</span>].set_xlabel(<span class="st" style="color: #20794D;">"Feature"</span>)</span>
<span id="cb4-8">axs[<span class="dv" style="color: #AD0000;">0</span>].set_ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb4-9">axs[<span class="dv" style="color: #AD0000;">1</span>].hist(pow_data_neg, bins <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb4-10">axs[<span class="dv" style="color: #AD0000;">1</span>].set_title(<span class="st" style="color: #20794D;">"Power-Transformed Data"</span>)</span>
<span id="cb4-11">axs[<span class="dv" style="color: #AD0000;">1</span>].set_xlabel(<span class="st" style="color: #20794D;">"Feature"</span>)</span>
<span id="cb4-12">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="fig-pow-hist-neg" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://www.dataalltheway.com/posts/001-data-transformation/index_files/figure-html/fig-pow-hist-neg-output-1.png" width="666" height="470" class="figure-img"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: Histogram of the negatively skewed data and its power transformation. Data is raised to the power ot 6. The skewness for the non-transformed data (left) is -0.9 and for the power-transformed data (right) is -0.3.</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p><em>Note: Since the data used in these figures are sampled from a skewed normal distribution the skewness calculated here are below 2. For a non-normally distributed skewed data it would be higher than 2. Log transformation is often used to bring a non-normal distribution closer to a normal distribution.</em></p>
<p>Log transformation can only be performed on positive values. Mathematics principles doesn’t allow log calculation on negative values. In case our input data contains negative values and a log like transformation is desired inverse hyperbolic sin (arcsinh) transformation method can be used.</p>
</section>
<section id="arcsinh-transformation" class="level2">
<h2 class="anchored" data-anchor-id="arcsinh-transformation">Arcsinh Transformation</h2>
<p><a href="http://people.math.sfu.ca/~cbm/aands/abramowitz_and_stegun.pdf">Inverse hyperbolic sin</a> transformation is a non-linear transformation that is often used in situations where a log transformations can’t be used; such as in the presence of negative values. <a href="https://support.cytobank.org/hc/en-us/articles/206148057-About-the-Arcsinh-transform">Flow and mass cytometry</a> are popular examples where arcsinh transformation is a almost always a method of choice. Reason being older flow cytometry machines produced positive values that were displayed on a log scale. However, newer machines can produce both negative and positive values that can’t be displayed on a log scale. Therefore, to keep the data resemble a log transformation arcsinh transformation is used.</p>
<p>Arcsinh transformation can also be tweaked by using a cofactor to behave differently around zero. For both negative and positive values starting from zero to cofactor are presented in a linear fashion along the lines of raw data values and values beyond he cofactor are presented in a log like fashion. In flow and mass cytometry a cofactor of 150 and 5 are used respectively.</p>
<p>For all real x: <img src="https://latex.codecogs.com/png.latex?arcsinh(x)%20=%20log(x%20+%20%5Csqrt%7Bx%5E2%20+%201%7D)"></p>
<p>Let’s use similar positively skewed data as in the log transformation to visualize how an arcsinh transformation affects the shape of the distribution. The only change that I would want to do in this data set is to add few negative values. As I mentioned earlier that our mathematical laws doesn’t allow us to take log on negative numbers arcsinh transformation is capable of transforming small negative values closer to zero. Figures Figure&nbsp;4 and Figure&nbsp;5 show the histograms comparing the original and the arcsinh transformed data for positive and negatively skewed data respectively. From the figures it’s evident that unlike log, arcsinh transformation works on both positively and negatively skewed data equally well.</p>
<div class="cell" data-execution_count="5">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># Generate random data points from a skewed normal distribution</span></span>
<span id="cb5-2">data_pos <span class="op" style="color: #5E5E5E;">=</span> np.<span class="bu" style="color: null;">round</span>(skewnorm.rvs(<span class="dv" style="color: #AD0000;">10</span>, size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">10000</span>, loc<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, random_state <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">101</span>), decimals <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;">#print('Skewness for the positively (right) skewed data before transformation : ', round(skew(data_pos), 2))</span></span>
<span id="cb5-4">data_neg <span class="op" style="color: #5E5E5E;">=</span> np.<span class="bu" style="color: null;">round</span>(skewnorm.rvs(<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">10</span>, size<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">10000</span>, loc<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">0</span>, random_state <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">101</span>), decimals <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;">#print('Skewness for the negatively (left) skewed data before transformation : ', round(skew(data_neg), 2)) </span></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;"># Arcsinh transform the data</span></span>
<span id="cb5-8">arcsinh_data_pos <span class="op" style="color: #5E5E5E;">=</span> np.arcsinh(data_pos)</span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;">#print('Skewness for the positively skewed data after transformation : ', round(skew(arcsinh_data_pos), 2)) </span></span>
<span id="cb5-10">arcsinh_data_neg <span class="op" style="color: #5E5E5E;">=</span> np.arcsinh(data_neg)</span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;">#print('Skewness for the negatively skewed data after transformation : ', round(skew(arcsinh_data_neg), 2)) </span></span></code></pre></div>
</details>
</div>
<div class="cell" data-execution_count="6">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">fig, axs <span class="op" style="color: #5E5E5E;">=</span> plt.subplots(ncols<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, sharey <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"all"</span>, tight_layout<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb6-2">axs[<span class="dv" style="color: #AD0000;">0</span>].hist(data_pos, bins <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb6-3">axs[<span class="dv" style="color: #AD0000;">0</span>].set_title(<span class="st" style="color: #20794D;">"Non-Transformed Data"</span>)</span>
<span id="cb6-4">axs[<span class="dv" style="color: #AD0000;">0</span>].set_xlabel(<span class="st" style="color: #20794D;">"Feature"</span>)</span>
<span id="cb6-5">axs[<span class="dv" style="color: #AD0000;">0</span>].set_ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb6-6">axs[<span class="dv" style="color: #AD0000;">1</span>].hist(arcsinh_data_pos, bins <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb6-7">axs[<span class="dv" style="color: #AD0000;">1</span>].set_title(<span class="st" style="color: #20794D;">"Arcsinh-Transformed Data"</span>)</span>
<span id="cb6-8">axs[<span class="dv" style="color: #AD0000;">1</span>].set_xlabel(<span class="st" style="color: #20794D;">"Feature"</span>)</span>
<span id="cb6-9">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="fig-arc-hist-pos" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://www.dataalltheway.com/posts/001-data-transformation/index_files/figure-html/fig-arc-hist-pos-output-1.png" width="662" height="470" class="figure-img"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;4: Histogram of the positively skewed data and its arcsinh transformation. The skewness for the non-transformed data (left) is 0.9 and for the arcsinh-transformed data (right) is 0.3.</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell" data-execution_count="7">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">fig, axs <span class="op" style="color: #5E5E5E;">=</span> plt.subplots(ncols<span class="op" style="color: #5E5E5E;">=</span><span class="dv" style="color: #AD0000;">2</span>, sharey <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"all"</span>, tight_layout<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb7-2">axs[<span class="dv" style="color: #AD0000;">0</span>].hist(data_neg, bins <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb7-3">axs[<span class="dv" style="color: #AD0000;">0</span>].set_title(<span class="st" style="color: #20794D;">"Non-Transformed Data"</span>)</span>
<span id="cb7-4">axs[<span class="dv" style="color: #AD0000;">0</span>].set_xlabel(<span class="st" style="color: #20794D;">"Feature"</span>)</span>
<span id="cb7-5">axs[<span class="dv" style="color: #AD0000;">0</span>].set_ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb7-6">axs[<span class="dv" style="color: #AD0000;">1</span>].hist(arcsinh_data_neg, bins <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">20</span>, edgecolor<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;">=</span><span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb7-7">axs[<span class="dv" style="color: #AD0000;">1</span>].set_title(<span class="st" style="color: #20794D;">"Arcsinh-Transformed Data"</span>)</span>
<span id="cb7-8">axs[<span class="dv" style="color: #AD0000;">1</span>].set_xlabel(<span class="st" style="color: #20794D;">"Feature"</span>)</span>
<span id="cb7-9">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div id="fig-arc-hist-neg" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://www.dataalltheway.com/posts/001-data-transformation/index_files/figure-html/fig-arc-hist-neg-output-1.png" width="662" height="470" class="figure-img"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;5: Histogram of the negatively skewed data and its arcsinh transformation. The skewness for the non-transformed data (left) is -0.9 and for the arcsinh-transformed data (right) is -0.3.</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="feature-wise-data-scaling" class="level1">
<h1>Feature Wise Data Scaling</h1>
<p>Data scaling is a type of data transformation that usually doesn’t affect the distribution of the data but change the scale on which the numerical values are presented. For example, if a distribution is normally distributed then it will stay normally distributed after the transformation however, if the numbers range from say 10 to 100 they may be re-scaled from 0 to 1. The relative difference between the numbers will remain the same. Such type of transformation is useful when the features in the data set are measured on different scales. For example in a data set that records height, weight, and time taken to finish a 100 meter sprint for 20 high school boys height would probably range from 4 to 6 ft, weight from 40 to 80 kg and sprint time from 10 to 30 seconds. You can see although they are all positive real numbers but they have different units and also different scales on which they are measured. In this particular example none of the ranges even overlap. Such kind of data sometimes becomes very difficult for machine learning algorithms to work with in particular for gradient decent algorithms to converge in a reasonable number of iterations. Therefore, having all the features on the same scale becomes desirable if not essential.</p>
<p>There are two common ways to get all the features to have the same scale: min-max scaling and standardization.</p>
<section id="min-max-scaling" class="level2">
<h2 class="anchored" data-anchor-id="min-max-scaling">Min-Max Scaling</h2>
<p>In min-max scaling for a given feature, we subtract the minimum value from each value and divide the residual by the difference between the maximum and the minimum value. The resulting transformed data is scaled between 0 and 1.</p>
<p><img src="https://latex.codecogs.com/png.latex?minmax(x)%20=%20x%20-%20min(x)%20/%20max(x)%20-%20min(x)"></p>
<p>Min-max scaling can also be modified to scale the values to the desired range, for example, between -1 and 1.</p>
<p><img src="https://latex.codecogs.com/png.latex?minmax(x)%20=%20((b%20-%20a)%20*%20(x%20-%20min(x))%20/%20max(x)%20-%20min(x))%20+%20%20a"></p>
<p>Where <img src="https://latex.codecogs.com/png.latex?a"> and <img src="https://latex.codecogs.com/png.latex?b"> are the minimum and maximum range respectively.</p>
<section id="applications" class="level3">
<h3 class="anchored" data-anchor-id="applications">Application(s)</h3>
<ul>
<li>Neural networks</li>
</ul>
</section>
</section>
<section id="standardization" class="level2">
<h2 class="anchored" data-anchor-id="standardization">Standardization</h2>
<p>Standardization is also known as z-scaling, mean removal, or variance scaling. In standardization, the goal is to scale the data with a mean of zero and a standard deviation of one.</p>
<p><img src="https://latex.codecogs.com/png.latex?z%20=%20(x%20-%20%5Cmu)/%5Csigma"></p>
<p>Where <img src="https://latex.codecogs.com/png.latex?%5Cmu"> is the mean and <img src="https://latex.codecogs.com/png.latex?%5Csigma"> is the standard deviation of a given feature. Then, the distribution of the transformed data is called the z-distribution.</p>
<section id="applications-1" class="level3">
<h3 class="anchored" data-anchor-id="applications-1">Application(s)</h3>
<ul>
<li>Principal Component Analysis (PCA)</li>
<li>In heatmaps to compare data among samples</li>
</ul>
</section>
</section>
</section>
<section id="data-normalization" class="level1">
<h1>Data Normalization</h1>
<p>In data science, we casually use the term data normalization for any method that transforms the data across the samples or features so that the data’s elements (samples or features) are similar and comparable. For example, in the case of gene expression measurements for multiple samples, we want to detect actual biological differences between the samples than the technical variations caused by human errors in handling samples. Therefore, having normalized data ensures that the differentially expressed genes we detect are due to biological conditions and not technical noise.</p>
<p>However, I like to consider normalization methods different from element-wise transformation or feature-wise scaling as changing the dataset requires re-normalization. As in the gene expression example, quantile normalization is frequently used and sensitive to changes in the samples and the features. Unlike element-wise transformation, where neither a sample nor a feature affects the transformation, or in feature-wise scaling, where dropping a feature would not affect the scaling of other features.</p>
<p>Therefore, this section will look into methods that are unlike element-wise transformation or feature-wise scaling.</p>
<section id="quantile-normalization" class="level2">
<h2 class="anchored" data-anchor-id="quantile-normalization">Quantile Normalization</h2>
<p><a href="https://en.wikipedia.org/wiki/Quantile_normalization">Quantile normalization</a> (QN) is a technique to make two distribution identical in statistical properties. QN involves first ranking the feature of each sample by magnitude, calculating the average value for genes occupying the same rank, and then substituting the values of all genes occupying that particular rank with this average value. The next step is to reorder the features of each sample in their original order.</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{farmer2022,
  author = {Rohit Farmer},
  title = {Data {Transformation}},
  date = {2022-10-05},
  url = {https://www.dataalltheway.com/posts/001-data-transformation},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-farmer2022" class="csl-entry quarto-appendix-citeas">
Rohit Farmer. 2022. <span>“Data Transformation.”</span> October 5, 2022.
<a href="https://www.dataalltheway.com/posts/001-data-transformation">https://www.dataalltheway.com/posts/001-data-transformation</a>.
</div></div></section></div> ]]></description>
  <category>Concepts</category>
  <category>Data Transformation</category>
  <guid>https://www.dataalltheway.com/posts/001-data-transformation/index.html</guid>
  <pubDate>Wed, 05 Oct 2022 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
